{"version":3,"file":"index.js","sources":["../src/is/array.ts","../src/is/boolean.ts","../src/is/date.ts","../src/is/function.ts","../src/is/null.ts","../src/is/number.ts","../src/is/object.ts","../src/utils/pure.ts","../src/is/promise.ts","../src/is/regexp.ts","../src/is/string.ts","../src/is/undefined.ts","../src/is/index.ts","../src/utils/type.ts","../node_modules/.pnpm/@corex/deepmerge@2.5.3/node_modules/@corex/deepmerge/dist/esm/combine-merge/combineMerge.js","../node_modules/.pnpm/@corex/deepmerge@2.5.3/node_modules/@corex/deepmerge/dist/esm/overwrite-merge/overwriteMerge.js","../node_modules/.pnpm/@corex/deepmerge@2.5.3/node_modules/@corex/deepmerge/dist/esm/get-merge-fn/getMergeFn.js","../node_modules/.pnpm/@corex/deepmerge@2.5.3/node_modules/@corex/deepmerge/dist/esm/is-object/isObject.js","../node_modules/.pnpm/@corex/deepmerge@2.5.3/node_modules/@corex/deepmerge/dist/esm/merge/merge.js","../src/utils/merge.ts","../src/utils/index.ts","../src/obj/get.ts","../src/obj/set.ts","../src/obj/has.ts","../src/obj/delete.ts","../src/obj/index.ts","../node_modules/.pnpm/big.js@6.0.3/node_modules/big.js/big.mjs","../src/quark.ts"],"sourcesContent":["/**\n * Checks if `value` is array.\n *\n * **Note:** strict array type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array, else `false`.\n * @example\n * ```ts\n * _.is.arr([true]);\n * // => true\n *\n * _.is.arr(\"alice\");\n * // => false\n * ```\n */\n\nexport default function arr(value?: unknown): value is any[] {\n\treturn Array.isArray(value);\n}\n","/**\n * Checks if `value` is boolean.\n *\n * **Note:** strict boolean type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is boolean, else `false`.\n * @example\n * ```ts\n * _.is.bool(true);\n * // => true\n *\n * _.is.bool(\"alice\");\n * // => false\n * ```\n */\n\nexport default function bool(value?: unknown): value is boolean {\n\treturn typeof value === 'boolean';\n}\n","/**\n * Checks if `value` is date.\n *\n * **Note:** strict date type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is date, else `false`.\n * @example\n * ```ts\n * _.is.date(new Date());\n * // => true\n *\n * _.is.date(\"alice\");\n * // => false\n * ```\n */\n\nexport default function date(value?: unknown): value is Date {\n\treturn value instanceof Date;\n}\n","/**\n * Checks if `value` is function.\n *\n * **Note:** strict function type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is function, else `false`.\n * @example\n * ```ts\n * _.is.func(() => {});\n * // => true\n *\n * _.is.func(\"alice\");\n * // => false\n * ```\n */\n\nexport default function func(value?: unknown): value is Function {\n\t// @ts-ignore\n\treturn !!(value && value.constructor && value.call && value.apply);\n}\n","/**\n * Checks if `value` is null.\n *\n * **Note:** strict null type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is null, else `false`.\n * @example\n * ```ts\n * _.is.null(null);\n * // => true\n *\n * _.is.null(\"alice\");\n * // => false\n * ```\n */\nexport default function nul(value?: unknown): value is null {\n\treturn value === null;\n}\n","/**\n * Checks if `value` is number.\n *\n * **Note:** strict number type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is number, else `false`.\n * @example\n * ```ts\n * _.is.num(10);\n * // => true\n *\n * _.is.num(\"alice\");\n * // => false\n * ```\n */\nexport default function num(value?: unknown): value is number {\n\t// @ts-ignore\n\treturn !isNaN(value) && typeof value === 'number';\n}\n","/**\n * Checks if `value` is object.\n *\n * **Note:** strict object type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object, else `false`.\n * @example\n * ```ts\n * _.is.obj({});\n * // => true\n *\n * _.is.obj(\"alice\");\n * // => false\n * ```\n */\n\nexport default function obj(value?: unknown): value is object {\n\treturn (\n\t\t!!value &&\n\t\ttypeof value == 'object' &&\n\t\t// @ts-ignore\n\t\tvalue.constructor == Object\n\t);\n\t// return $pureType.call(value) == '[object Object]';\n}\n","/**\n * returns the type absolute type.\n *\n * **Note:** returns strict type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} value The value to check.\n * @returns {string} Returns type of value.\n * @example\n * ```ts\n * _.utils.pure(\"alice\");\n * // => [object String]\n *\n * _.utils.pure(Promise.resolve());\n * // => [object Promise]\n * ```\n */\n\nexport default function pure(value: unknown): string {\n\treturn Object.prototype.toString.call(value);\n}\n","import pure from '../utils/pure';\n\n/**\n * Checks if `value` is promise.\n *\n * **Note:** strict promise type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {unknown} value The value to check.\n * @returns {boolean} Returns `true` if `value` is promise, else `false`.\n * @example\n * ```ts\n * _.is.prom(Promise.resolve());\n * // => true\n *\n * _.is.prom(true);\n * // => false\n * ```\n */\n\nexport default function prom(value?: unknown): value is Promise<unknown> {\n\t// @ts-ignore\n\treturn value && pure(value) === '[object Promise]';\n}\n","import pure from '../utils/pure';\n\n/**\n * Checks if `value` is regexp.\n *\n * **Note:** strict regexp type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is regexp, else `false`.\n * @example\n * ```ts\n * _.is.reg(/[0-9]/);\n * // => true\n *\n * _.is.reg(\"alice\");\n * // => false\n * ```\n */\nexport default function reg(value?: unknown): value is RegExp {\n\treturn pure(value) == '[object RegExp]';\n}\n","/**\n * Checks if `value` is string.\n *\n * **Note:** strict string type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {unknown} value The value to check.\n * @returns {boolean} Returns `true` if `value` is string, else `false`.\n * @example\n * ```ts\n * _.is.str(\"alice\");\n * // => true\n *\n * _.is.str(true);\n * // => false\n * ```\n */\n\nexport default function str(value?: unknown): value is string {\n\treturn typeof value == 'string';\n}\n","/**\n * Checks if `value` is undefined.\n *\n * **Note:** strict undefined type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {unknown} value The value to check.\n * @returns {boolean} Returns `true` if `value` is undefined, else `false`.\n * @example\n * ```ts\n * _.is.und(undefined);\n * // => true\n *\n * _.is.und(true);\n * // => false\n * ```\n */\n\nexport default function und(value?: unknown): value is undefined {\n\treturn value === void 0;\n}\n","import arr from './array';\nimport bool from './boolean';\nimport date from './date';\nimport func from './function';\nimport nul from './null';\nimport num from './number';\nimport obj from './object';\nimport prom from './promise';\nimport reg from './regexp';\nimport str from './string';\nimport und from './undefined';\n\nexport default {\n\tarr,\n\tbool,\n\tdate,\n\tfunc,\n\tnul,\n\tnum,\n\tobj,\n\tprom,\n\treg,\n\tstr,\n\tund,\n};\n","import pure from './pure';\n\n/**\n * returns the type absolute type.\n *\n * **Note:** returns strict type SLICED !!!\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} value The value to check.\n * @returns {string} Returns type of value.\n * @example\n * ```ts\n * _.is.utils.type(\"alice\");\n * // => String\n *\n * _.is.utils.type(Promise.resolve());\n * // => Promise\n * ```\n */\n\nexport default function type(value: unknown): string {\n\treturn pure(value).slice(8, -1);\n}\n","export default (prevArr, currArr) => {\n    return [...new Set([...prevArr, ...currArr])];\n};\n","export default (_, currArr) => currArr;\n","import { overwriteMerge } from '../overwrite-merge';\nimport { combineMerge } from '../combine-merge';\nconst getMergeFn = (type) => {\n    switch (type) {\n        case 'overwrite':\n            return overwriteMerge;\n        case 'combine':\n        default:\n            return combineMerge;\n    }\n};\nexport default getMergeFn;\n","// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default (obj) => {\n    if (typeof obj === 'object' && obj !== null) {\n        if (typeof Object.getPrototypeOf === 'function') {\n            const prototype = Object.getPrototypeOf(obj);\n            return prototype === Object.prototype || prototype === null;\n        }\n        return Object.prototype.toString.call(obj) === '[object Object]';\n    }\n    return false;\n};\n","import { isObject } from '../is-object';\nimport { getMergeFn } from '../get-merge-fn';\nconst withDefaultOptions = (options) => {\n    return Object.assign({ arrayMergeType: 'combine', arrayMerge: getMergeFn(options ? options.arrayMergeType : 'combine') }, options);\n};\nconst merge = (objects, options) => {\n    const opts = withDefaultOptions(options);\n    return objects.reduce((prev, curr) => {\n        Object.keys(curr).forEach((key) => {\n            if (Array.isArray(prev[key]) && Array.isArray(curr[key])) {\n                if (opts && opts.arrayMerge) {\n                    prev[key] = opts.arrayMerge(prev[key], curr[key]);\n                }\n            }\n            else if (isObject(prev[key]) && isObject(curr[key])) {\n                prev[key] = merge([prev[key], curr[key]], opts);\n            }\n            else {\n                prev[key] = curr[key];\n            }\n        });\n        return prev;\n    }, {});\n};\nexport default merge;\n","import { merge as $merge } from '@corex/deepmerge';\n\ntype GetObjDifferentKeys<T, U> = Omit<T, keyof U> & Omit<U, keyof T>;\n\ntype GetObjSameKeys<T, U> = Omit<T | U, keyof GetObjDifferentKeys<T, U>>;\n\ntype MergeTwoObjects<T, U> = Partial<GetObjDifferentKeys<T, U>> &\n\t{ [K in keyof GetObjSameKeys<T, U>]: DeepMergeTwoTypes<T[K], U[K]> };\n\nexport type DeepMergeTwoTypes<T, U> = [T, U] extends [\n\t(infer TItem)[],\n\t(infer UItem)[],\n]\n\t? DeepMergeTwoTypes<TItem, UItem>[]\n\t: [T, U] extends [{ [key: string]: unknown }, { [key: string]: unknown }]\n\t? MergeTwoObjects<T, U>\n\t: [T, U] extends [\n\t\t\t{ [key: string]: unknown } | undefined,\n\t\t\t{ [key: string]: unknown } | undefined,\n\t  ]\n\t? MergeTwoObjects<NonNullable<T>, NonNullable<U>> | undefined\n\t: T | U;\n\ntype Head<T extends any[]> = T extends [any, ...any[]] ? T[0] : never;\n\ntype Length<T extends any[]> = T['length'];\n\ntype Tail<T extends any[]> = T extends [any, ...infer TT] ? TT : [];\n\ntype DeepMergeResult<CurrResult, Objects extends any[]> = {\n\t0: CurrResult;\n\t1: DeepMergeResult<\n\t\tDeepMergeTwoTypes<CurrResult, Head<Objects>>,\n\t\tTail<Objects>\n\t>;\n}[Length<Objects> extends 0 ? 0 : 1];\n\ntype DeepMergeMany<Args extends any[]> = Args extends [\n\tinfer Item1,\n\t...infer Rest\n]\n\t? DeepMergeResult<Item1, Rest>\n\t: never;\n\n/**\n * merges all the objects.\n *\n * **Note:** KEEPS TYPES SAFE\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} values values to merge.\n * @returns {DEEPMERGED} Returns merged data.\n * @example\n *\n * // => NO EXAMPLE\n */\nexport default function merge<T extends any[]>(...args: T): DeepMergeMany<T> {\n\treturn $merge(args) as any;\n}\n","import pure from './pure';\nimport type from './type';\nimport merge from './merge';\n\nexport default {\n\tpure,\n\ttype,\n\tmerge,\n};\n","import $obj from '../is/object';\nimport $arr from '../is/array';\nimport $str from '../is/string';\n\n/**\n * gets nested key from target\n *\n * @asMemberOf quark\n * @since 1.0.0\n * @category obj\n * @param {object|any[]} target The target.\n * @param {string|any[]} path The path of nested key.\n * @param {unknown} def The default value.\n * @returns {any} Returns `value` if path exist, else `undefined`.\n * @example\n * ```ts\n * let obj = {\n *  user: {\n *   name: \"alice\",\n *   surname: \"zuberg\"\n *  },\n *  items: [\"sword\", \"armor\"]\n * }\n *\n * _.obj.get(obj, \"user.name\");\n * // => \"alice\"\n *\n * _.obj.get(obj, \"user.age\", 19);\n * // => \"sword\"\n * ```\n */\n\nexport default function get(\n\ttarget: object | any[],\n\tpath: string | any[],\n\tdef?: unknown,\n): any {\n\tif (!$obj(target) && !$arr(target)) return target;\n\n\tif ($str(path)) {\n\t\tpath = path.toString().match(/[^.[\\]]+/g) || [];\n\t}\n\n\treturn path.reduce(\n\t\t(xs: any, x: any, _i: any, arr: any) =>\n\t\t\txs && xs[x] ? xs[x] : (arr.splice(1), def),\n\t\ttarget,\n\t);\n}\n","import $obj from '../is/object';\nimport $arr from '../is/array';\nimport $str from '../is/string';\n\n/**\n * sets nested key and value to target\n *\n * if any key (i) of the nested path doesnt exist on the target:\n * quark will create object or an array as default with these rules\n * if the key after that comes with our lost key (i+1) is a number then default will be an array\n * else the default will be an object\n *\n *\n * **Note:** mutates the target\n * @asMemberOf quark\n * @since 1.0.0\n * @category obj\n * @param {object|any[]} target The target.\n * @param {string|any[]} path The path of nested key.\n * @param {unknown} value The default value.\n * @returns {any} Returns mutated target.\n * @example\n * ```ts\n * // rule 1\n * _.obj.set({}, \"some.property\", 15);\n *\n * // {\n * //  some: {\n * //   property: 15\n * //  }\n * // }\n *\n * // rule 2\n * _.obj.set({}, \"some.0\", 15);\n *\n * // {\n * //  some: [15]\n * // }\n *\n * let obj = {}\n *\n * _.obj.set(obj, \"user\", 5);\n * // {\n * //  user: 5\n * // }\n *\n * _.obj.set(obj, \"user\");\n * // {\n * //  user: undefined\n * // }\n * ```\n */\n\nexport default function set(\n\tobj: object | any[],\n\tpath: string | any[],\n\tvalue?: unknown,\n): any {\n\tif (!$obj(obj) && !$arr(obj)) return obj;\n\n\tif ($str(path)) {\n\t\tpath = path.toString().match(/[^.[\\]]+/g) || [];\n\t}\n\n\tpath.slice(0, -1).reduce((a: any, c: any, i: any) => {\n\t\tif ($obj(a[c])) {\n\t\t\treturn a[c];\n\t\t} else {\n\t\t\tif (Math.abs(path[i + 1]) >> 0 === +path[i + 1]) {\n\t\t\t\treturn (a[c] = []);\n\t\t\t} else {\n\t\t\t\treturn (a[c] = {});\n\t\t\t}\n\t\t}\n\t}, obj)[path[path.length - 1]] = value;\n\n\treturn obj;\n}\n","import $obj from '../is/object';\nimport $arr from '../is/array';\nimport $str from '../is/string';\n\n/**\n * looks for path is it exist inside target.\n *\n * @asMemberOf quark\n * @since 1.0.0\n * @category obj\n * @param {object|any[]} target The target.\n * @param {string|any[]} path The path of nested key.\n * @returns {boolean} Returns `true` if path exist, else `false`.\n * @example\n * ```ts\n * let obj = {\n *  user: {\n *   name: \"alice\",\n *   surname: \"zuberg\"\n *  },\n *  items: [\"sword\", \"armor\"]\n * }\n *\n * _.obj.has(obj, \"user.name\");\n * // => true\n *\n * _.obj.has(obj, \"items.0\");\n * // => true\n *\n * _.obj.has(obj, \"user.age\");\n * // => false\n * ```\n */\n\nexport default function has(\n\ttarget: object | any[],\n\tpath: string | any[],\n): boolean {\n\tif (!$obj(target) && !$arr(target)) return target;\n\n\tif ($str(path)) {\n\t\tpath = path.toString().match(/[^.[\\]]+/g) || [];\n\t}\n\n\treturn path.reduce(\n\t\t(xs: any, x: any, i: any, arr: any[]) =>\n\t\t\txs && xs[x]\n\t\t\t\t? i == arr.length - 1 && Reflect.has(xs, x)\n\t\t\t\t\t? true\n\t\t\t\t\t: xs[x]\n\t\t\t\t: (arr.splice(1), false),\n\t\ttarget,\n\t);\n}\n","import $obj from '../is/object';\nimport $arr from '../is/array';\nimport $str from '../is/string';\n\n/**\n * delete the key from target.\n *\n * **Note:** mutates the target\n * @asMemberOf quark\n * @since 1.0.0\n * @category obj\n * @param {object|any[]} target The target.\n * @param {string|any[]} path The path of nested key.\n * @returns {any} Returns `deleted value` if path exist, else `undefined`.\n * @example\n * ```ts\n * let obj = {\n *  user: {\n *   name: \"alice\",\n *   surname: \"zuberg\"\n *  },\n *  items: [\"sword\", \"armor\"]\n * }\n *\n * _.obj.del(obj, \"user.name\");\n * // {\n * //  user: {\n * //   surname: \"zuberg\"\n * //  },\n * //  items: [\"sword\", \"armor\"]\n * // }\n *\n * _.obj.del(obj, \"items.0\");\n * // {\n * //  user: {\n * //   name: \"alice\",\n * //   surname: \"zuberg\"\n * //  },\n * //  items: [__emty__, \"armor\"]\n * // }\n * ```\n */\n\nexport default function del(target: object | any[], path: string | any[]): any {\n\tif (!$obj(target) && !$arr(target)) return target;\n\n\tif ($str(path)) {\n\t\tpath = path.toString().match(/[^.[\\]]+/g) || [];\n\t}\n\n\treturn path.reduce(\n\t\t(xs: any, x: any, i: any, arr: any[]) =>\n\t\t\txs && xs[x]\n\t\t\t\t? i == arr.length - 1 && Reflect.has(xs, x)\n\t\t\t\t\t? (() => {\n\t\t\t\t\t\t\tlet data = xs[x];\n\t\t\t\t\t\t\tReflect.deleteProperty(xs, x);\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t  })()\n\t\t\t\t\t: xs[x]\n\t\t\t\t: (arr.splice(1), false),\n\t\ttarget,\n\t);\n}\n","import get from './get';\nimport set from './set';\nimport has from './has';\nimport del from './delete';\n\nexport default {\n\tget,\n\tset,\n\thas,\n\tdel,\n};\n","/*\r\n *  big.js v6.0.3\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2020 Michael Mclaughlin\r\n *  https://github.com/MikeMcl/big.js/LICENCE.md\r\n */\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n  // The default values below must be integers within the stated ranges.\r\n\r\n  /*\r\n   * The maximum number of decimal places (DP) of the results of operations involving division:\r\n   * div and sqrt, and pow with negative exponents.\r\n   */\r\nvar DP = 20,          // 0 to MAX_DP\r\n\r\n  /*\r\n   * The rounding mode (RM) used when rounding to the above decimal places.\r\n   *\r\n   *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n   *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n   *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n   *  3  Away from zero.                                  (ROUND_UP)\r\n   */\r\n  RM = 1,             // 0, 1, 2 or 3\r\n\r\n  // The maximum value of DP and Big.DP.\r\n  MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n  // The maximum magnitude of the exponent argument to the pow method.\r\n  MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n  /*\r\n   * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n   * (JavaScript numbers: -7)\r\n   * -1000000 is the minimum recommended exponent value of a Big.\r\n   */\r\n  NE = -7,            // 0 to -1000000\r\n\r\n  /*\r\n   * The positive exponent (PE) at and above which toString returns exponential notation.\r\n   * (JavaScript numbers: 21)\r\n   * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\r\n   */\r\n  PE = 21,            // 0 to 1000000\r\n\r\n  /*\r\n   * When true, an error will be thrown if a primitive number is passed to the Big constructor,\r\n   * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\r\n   * primitive number without a loss of precision.\r\n   */\r\n  STRICT = false,     // true or false\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n  // Error messages.\r\n  NAME = '[big.js] ',\r\n  INVALID = NAME + 'Invalid ',\r\n  INVALID_DP = INVALID + 'decimal places',\r\n  INVALID_RM = INVALID + 'rounding mode',\r\n  DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n  // The shared prototype object.\r\n  P = {},\r\n  UNDEFINED = void 0,\r\n  NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n/*\r\n * Create and return a Big constructor.\r\n */\r\nfunction _Big_() {\r\n\r\n  /*\r\n   * The Big constructor and exported function.\r\n   * Create and return a new instance of a Big number object.\r\n   *\r\n   * n {number|string|Big} A numeric value.\r\n   */\r\n  function Big(n) {\r\n    var x = this;\r\n\r\n    // Enable constructor usage without new.\r\n    if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n    // Duplicate.\r\n    if (n instanceof Big) {\r\n      x.s = n.s;\r\n      x.e = n.e;\r\n      x.c = n.c.slice();\r\n    } else {\r\n      if (typeof n !== 'string') {\r\n        if (Big.strict === true) {\r\n          throw TypeError(INVALID + 'number');\r\n        }\r\n\r\n        // Minus zero?\r\n        n = n === 0 && 1 / n < 0 ? '-0' : String(n);\r\n      }\r\n\r\n      parse(x, n);\r\n    }\r\n\r\n    // Retain a reference to this Big constructor.\r\n    // Shadow Big.prototype.constructor which points to Object.\r\n    x.constructor = Big;\r\n  }\r\n\r\n  Big.prototype = P;\r\n  Big.DP = DP;\r\n  Big.RM = RM;\r\n  Big.NE = NE;\r\n  Big.PE = PE;\r\n  Big.strict = STRICT;\r\n\r\n  return Big;\r\n}\r\n\r\n\r\n/*\r\n * Parse the number or string value passed to a Big constructor.\r\n *\r\n * x {Big} A Big number instance.\r\n * n {number|string} A numeric value.\r\n */\r\nfunction parse(x, n) {\r\n  var e, i, nl;\r\n\r\n  if (!NUMERIC.test(n)) {\r\n    throw Error(INVALID + 'number');\r\n  }\r\n\r\n  // Determine sign.\r\n  x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n  // Decimal point?\r\n  if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n  // Exponential form?\r\n  if ((i = n.search(/e/i)) > 0) {\r\n\r\n    // Determine exponent.\r\n    if (e < 0) e = i;\r\n    e += +n.slice(i + 1);\r\n    n = n.substring(0, i);\r\n  } else if (e < 0) {\r\n\r\n    // Integer.\r\n    e = n.length;\r\n  }\r\n\r\n  nl = n.length;\r\n\r\n  // Determine leading zeros.\r\n  for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n  if (i == nl) {\r\n\r\n    // Zero.\r\n    x.c = [x.e = 0];\r\n  } else {\r\n\r\n    // Determine trailing zeros.\r\n    for (; nl > 0 && n.charAt(--nl) == '0';);\r\n    x.e = e - i - 1;\r\n    x.c = [];\r\n\r\n    // Convert string to array of digits without leading/trailing zeros.\r\n    for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Round Big x to a maximum of sd significant digits using rounding mode rm.\r\n *\r\n * x {Big} The Big to round.\r\n * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\r\n * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n * [more] {boolean} Whether the result of division was truncated.\r\n */\r\nfunction round(x, sd, rm, more) {\r\n  var xc = x.c;\r\n\r\n  if (rm === UNDEFINED) rm = Big.RM;\r\n  if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\r\n    throw Error(INVALID_RM);\r\n  }\r\n\r\n  if (sd < 1) {\r\n    more =\r\n      rm === 3 && (more || !!xc[0]) || sd === 0 && (\r\n      rm === 1 && xc[0] >= 5 ||\r\n      rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\r\n    );\r\n\r\n    xc.length = 1;\r\n\r\n    if (more) {\r\n\r\n      // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n      x.e = x.e - sd + 1;\r\n      xc[0] = 1;\r\n    } else {\r\n\r\n      // Zero.\r\n      xc[0] = x.e = 0;\r\n    }\r\n  } else if (sd < xc.length) {\r\n\r\n    // xc[sd] is the digit after the digit that may be rounded up.\r\n    more =\r\n      rm === 1 && xc[sd] >= 5 ||\r\n      rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\r\n        (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\r\n      rm === 3 && (more || !!xc[0]);\r\n\r\n    // Remove any digits after the required precision.\r\n    xc.length = sd--;\r\n\r\n    // Round up?\r\n    if (more) {\r\n\r\n      // Rounding up may mean the previous digit has to be rounded up.\r\n      for (; ++xc[sd] > 9;) {\r\n        xc[sd] = 0;\r\n        if (!sd--) {\r\n          ++x.e;\r\n          xc.unshift(1);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (sd = xc.length; !xc[--sd];) xc.pop();\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Return a string representing the value of Big x in normal or exponential notation.\r\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n */\r\nfunction stringify(x, doExponential, isNonzero) {\r\n  var e = x.e,\r\n    s = x.c.join(''),\r\n    n = s.length;\r\n\r\n  // Exponential notation?\r\n  if (doExponential) {\r\n    s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n  // Normal notation.\r\n  } else if (e < 0) {\r\n    for (; ++e;) s = '0' + s;\r\n    s = '0.' + s;\r\n  } else if (e > 0) {\r\n    if (++e > n) {\r\n      for (e -= n; e--;) s += '0';\r\n    } else if (e < n) {\r\n      s = s.slice(0, e) + '.' + s.slice(e);\r\n    }\r\n  } else if (n > 1) {\r\n    s = s.charAt(0) + '.' + s.slice(1);\r\n  }\r\n\r\n  return x.s < 0 && isNonzero ? '-' + s : s;\r\n}\r\n\r\n\r\n// Prototype/instance methods\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the absolute value of this Big.\r\n */\r\nP.abs = function () {\r\n  var x = new this.constructor(this);\r\n  x.s = 1;\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return 1 if the value of this Big is greater than the value of Big y,\r\n *       -1 if the value of this Big is less than the value of Big y, or\r\n *        0 if they have the same value.\r\n */\r\nP.cmp = function (y) {\r\n  var isneg,\r\n    x = this,\r\n    xc = x.c,\r\n    yc = (y = new x.constructor(y)).c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either zero?\r\n  if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  isneg = i < 0;\r\n\r\n  // Compare exponents.\r\n  if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = -1; ++i < j;) {\r\n    if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n  }\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n */\r\nP.div = function (y) {\r\n  var x = this,\r\n    Big = x.constructor,\r\n    a = x.c,                  // dividend\r\n    b = (y = new Big(y)).c,   // divisor\r\n    k = x.s == y.s ? 1 : -1,\r\n    dp = Big.DP;\r\n\r\n  if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n    throw Error(INVALID_DP);\r\n  }\r\n\r\n  // Divisor is zero?\r\n  if (!b[0]) {\r\n    throw Error(DIV_BY_ZERO);\r\n  }\r\n\r\n  // Dividend is 0? Return +-0.\r\n  if (!a[0]) {\r\n    y.s = k;\r\n    y.c = [y.e = 0];\r\n    return y;\r\n  }\r\n\r\n  var bl, bt, n, cmp, ri,\r\n    bz = b.slice(),\r\n    ai = bl = b.length,\r\n    al = a.length,\r\n    r = a.slice(0, bl),   // remainder\r\n    rl = r.length,\r\n    q = y,                // quotient\r\n    qc = q.c = [],\r\n    qi = 0,\r\n    p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\r\n\r\n  q.s = k;\r\n  k = p < 0 ? 0 : p;\r\n\r\n  // Create version of divisor with leading zero.\r\n  bz.unshift(0);\r\n\r\n  // Add zeros to make remainder as long as divisor.\r\n  for (; rl++ < bl;) r.push(0);\r\n\r\n  do {\r\n\r\n    // n is how many times the divisor goes into current remainder.\r\n    for (n = 0; n < 10; n++) {\r\n\r\n      // Compare divisor and remainder.\r\n      if (bl != (rl = r.length)) {\r\n        cmp = bl > rl ? 1 : -1;\r\n      } else {\r\n        for (ri = -1, cmp = 0; ++ri < bl;) {\r\n          if (b[ri] != r[ri]) {\r\n            cmp = b[ri] > r[ri] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // If divisor < remainder, subtract divisor from remainder.\r\n      if (cmp < 0) {\r\n\r\n        // Remainder can't be more than 1 digit longer than divisor.\r\n        // Equalise lengths using divisor with extra leading zero?\r\n        for (bt = rl == bl ? b : bz; rl;) {\r\n          if (r[--rl] < bt[rl]) {\r\n            ri = rl;\r\n            for (; ri && !r[--ri];) r[ri] = 9;\r\n            --r[ri];\r\n            r[rl] += 10;\r\n          }\r\n          r[rl] -= bt[rl];\r\n        }\r\n\r\n        for (; !r[0];) r.shift();\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Add the digit n to the result array.\r\n    qc[qi++] = cmp ? n : ++n;\r\n\r\n    // Update the remainder.\r\n    if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n    else r = [a[ai]];\r\n\r\n  } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n  // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n  if (!qc[0] && qi != 1) {\r\n\r\n    // There can't be more than one zero.\r\n    qc.shift();\r\n    q.e--;\r\n    p--;\r\n  }\r\n\r\n  // Round?\r\n  if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\r\n\r\n  return q;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n */\r\nP.eq = function (y) {\r\n  return this.cmp(y) === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n * false.\r\n */\r\nP.gt = function (y) {\r\n  return this.cmp(y) > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n * return false.\r\n */\r\nP.gte = function (y) {\r\n  return this.cmp(y) > -1;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n */\r\nP.lt = function (y) {\r\n  return this.cmp(y) < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n * return false.\r\n */\r\nP.lte = function (y) {\r\n  return this.cmp(y) < 1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n */\r\nP.minus = P.sub = function (y) {\r\n  var i, j, t, xlty,\r\n    x = this,\r\n    Big = x.constructor,\r\n    a = x.s,\r\n    b = (y = new Big(y)).s;\r\n\r\n  // Signs differ?\r\n  if (a != b) {\r\n    y.s = -b;\r\n    return x.plus(y);\r\n  }\r\n\r\n  var xc = x.c.slice(),\r\n    xe = x.e,\r\n    yc = y.c,\r\n    ye = y.e;\r\n\r\n  // Either zero?\r\n  if (!xc[0] || !yc[0]) {\r\n    if (yc[0]) {\r\n      y.s = -b;\r\n    } else if (xc[0]) {\r\n      y = new Big(x);\r\n    } else {\r\n      y.s = 1;\r\n    }\r\n    return y;\r\n  }\r\n\r\n  // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n  if (a = xe - ye) {\r\n\r\n    if (xlty = a < 0) {\r\n      a = -a;\r\n      t = xc;\r\n    } else {\r\n      ye = xe;\r\n      t = yc;\r\n    }\r\n\r\n    t.reverse();\r\n    for (b = a; b--;) t.push(0);\r\n    t.reverse();\r\n  } else {\r\n\r\n    // Exponents equal. Check digit by digit.\r\n    j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n    for (a = b = 0; b < j; b++) {\r\n      if (xc[b] != yc[b]) {\r\n        xlty = xc[b] < yc[b];\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // x < y? Point xc to the array of the bigger number.\r\n  if (xlty) {\r\n    t = xc;\r\n    xc = yc;\r\n    yc = t;\r\n    y.s = -y.s;\r\n  }\r\n\r\n  /*\r\n   * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n   * needs to start at yc.length.\r\n   */\r\n  if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n  // Subtract yc from xc.\r\n  for (b = i; j > a;) {\r\n    if (xc[--j] < yc[j]) {\r\n      for (i = j; i && !xc[--i];) xc[i] = 9;\r\n      --xc[i];\r\n      xc[j] += 10;\r\n    }\r\n\r\n    xc[j] -= yc[j];\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; xc[--b] === 0;) xc.pop();\r\n\r\n  // Remove leading zeros and adjust exponent accordingly.\r\n  for (; xc[0] === 0;) {\r\n    xc.shift();\r\n    --ye;\r\n  }\r\n\r\n  if (!xc[0]) {\r\n\r\n    // n - n = +0\r\n    y.s = 1;\r\n\r\n    // Result must be zero.\r\n    xc = [ye = 0];\r\n  }\r\n\r\n  y.c = xc;\r\n  y.e = ye;\r\n\r\n  return y;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n */\r\nP.mod = function (y) {\r\n  var ygtx,\r\n    x = this,\r\n    Big = x.constructor,\r\n    a = x.s,\r\n    b = (y = new Big(y)).s;\r\n\r\n  if (!y.c[0]) {\r\n    throw Error(DIV_BY_ZERO);\r\n  }\r\n\r\n  x.s = y.s = 1;\r\n  ygtx = y.cmp(x) == 1;\r\n  x.s = a;\r\n  y.s = b;\r\n\r\n  if (ygtx) return new Big(x);\r\n\r\n  a = Big.DP;\r\n  b = Big.RM;\r\n  Big.DP = Big.RM = 0;\r\n  x = x.div(y);\r\n  Big.DP = a;\r\n  Big.RM = b;\r\n\r\n  return this.minus(x.times(y));\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n */\r\nP.plus = P.add = function (y) {\r\n  var e, k, t,\r\n    x = this,\r\n    Big = x.constructor;\r\n\r\n  y = new Big(y);\r\n\r\n  // Signs differ?\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.minus(y);\r\n  }\r\n\r\n  var xe = x.e,\r\n    xc = x.c,\r\n    ye = y.e,\r\n    yc = y.c;\r\n\r\n  // Either zero?\r\n  if (!xc[0] || !yc[0]) {\r\n    if (!yc[0]) {\r\n      if (xc[0]) {\r\n        y = new Big(x);\r\n      } else {\r\n        y.s = x.s;\r\n      }\r\n    }\r\n    return y;\r\n  }\r\n\r\n  xc = xc.slice();\r\n\r\n  // Prepend zeros to equalise exponents.\r\n  // Note: reverse faster than unshifts.\r\n  if (e = xe - ye) {\r\n    if (e > 0) {\r\n      ye = xe;\r\n      t = yc;\r\n    } else {\r\n      e = -e;\r\n      t = xc;\r\n    }\r\n\r\n    t.reverse();\r\n    for (; e--;) t.push(0);\r\n    t.reverse();\r\n  }\r\n\r\n  // Point xc to the longer array.\r\n  if (xc.length - yc.length < 0) {\r\n    t = yc;\r\n    yc = xc;\r\n    xc = t;\r\n  }\r\n\r\n  e = yc.length;\r\n\r\n  // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n  for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\r\n\r\n  // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n  if (k) {\r\n    xc.unshift(k);\r\n    ++ye;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (e = xc.length; xc[--e] === 0;) xc.pop();\r\n\r\n  y.c = xc;\r\n  y.e = ye;\r\n\r\n  return y;\r\n};\r\n\r\n\r\n/*\r\n * Return a Big whose value is the value of this Big raised to the power n.\r\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n * mode Big.RM.\r\n *\r\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n */\r\nP.pow = function (n) {\r\n  var x = this,\r\n    one = new x.constructor('1'),\r\n    y = one,\r\n    isneg = n < 0;\r\n\r\n  if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n    throw Error(INVALID + 'exponent');\r\n  }\r\n\r\n  if (isneg) n = -n;\r\n\r\n  for (;;) {\r\n    if (n & 1) y = y.times(x);\r\n    n >>= 1;\r\n    if (!n) break;\r\n    x = x.times(x);\r\n  }\r\n\r\n  return isneg ? one.div(y) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\r\n * significant digits using rounding mode rm, or Big.RM if rm is not specified.\r\n *\r\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n */\r\nP.prec = function (sd, rm) {\r\n  if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n    throw Error(INVALID + 'precision');\r\n  }\r\n  return round(new this.constructor(this), sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\r\n * using rounding mode rm, or Big.RM if rm is not specified.\r\n * If dp is negative, round to an integer which is a multiple of 10**-dp.\r\n * If dp is not specified, round to 0 decimal places.\r\n *\r\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n */\r\nP.round = function (dp, rm) {\r\n  if (dp === UNDEFINED) dp = 0;\r\n  else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\r\n    throw Error(INVALID_DP);\r\n  }\r\n  return round(new this.constructor(this), dp + this.e + 1, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n */\r\nP.sqrt = function () {\r\n  var r, c, t,\r\n    x = this,\r\n    Big = x.constructor,\r\n    s = x.s,\r\n    e = x.e,\r\n    half = new Big('0.5');\r\n\r\n  // Zero?\r\n  if (!x.c[0]) return new Big(x);\r\n\r\n  // Negative?\r\n  if (s < 0) {\r\n    throw Error(NAME + 'No square root');\r\n  }\r\n\r\n  // Estimate.\r\n  s = Math.sqrt(x + '');\r\n\r\n  // Math.sqrt underflow/overflow?\r\n  // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n  if (s === 0 || s === 1 / 0) {\r\n    c = x.c.join('');\r\n    if (!(c.length + e & 1)) c += '0';\r\n    s = Math.sqrt(c);\r\n    e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n    r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n  } else {\r\n    r = new Big(s + '');\r\n  }\r\n\r\n  e = r.e + (Big.DP += 4);\r\n\r\n  // Newton-Raphson iteration.\r\n  do {\r\n    t = r;\r\n    r = half.times(t.plus(x.div(t)));\r\n  } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n  return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big times the value of Big y.\r\n */\r\nP.times = P.mul = function (y) {\r\n  var c,\r\n    x = this,\r\n    Big = x.constructor,\r\n    xc = x.c,\r\n    yc = (y = new Big(y)).c,\r\n    a = xc.length,\r\n    b = yc.length,\r\n    i = x.e,\r\n    j = y.e;\r\n\r\n  // Determine sign of result.\r\n  y.s = x.s == y.s ? 1 : -1;\r\n\r\n  // Return signed 0 if either 0.\r\n  if (!xc[0] || !yc[0]) {\r\n    y.c = [y.e = 0];\r\n    return y;\r\n  }\r\n\r\n  // Initialise exponent of result as x.e + y.e.\r\n  y.e = i + j;\r\n\r\n  // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n  if (a < b) {\r\n    c = xc;\r\n    xc = yc;\r\n    yc = c;\r\n    j = a;\r\n    a = b;\r\n    b = j;\r\n  }\r\n\r\n  // Initialise coefficient array of result with zeros.\r\n  for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n  // Multiply.\r\n\r\n  // i is initially xc.length.\r\n  for (i = b; i--;) {\r\n    b = 0;\r\n\r\n    // a is yc.length.\r\n    for (j = a + i; j > i;) {\r\n\r\n      // Current sum of products at this digit position, plus carry.\r\n      b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n      c[j--] = b % 10;\r\n\r\n      // carry\r\n      b = b / 10 | 0;\r\n    }\r\n\r\n    c[j] = b;\r\n  }\r\n\r\n  // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n  if (b) ++y.e;\r\n  else c.shift();\r\n\r\n  // Remove trailing zeros.\r\n  for (i = c.length; !c[--i];) c.pop();\r\n  y.c = c;\r\n\r\n  return y;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big in exponential notation rounded to dp fixed\r\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n *\r\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n */\r\nP.toExponential = function (dp, rm) {\r\n  var x = this,\r\n    n = x.c[0];\r\n\r\n  if (dp !== UNDEFINED) {\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    x = round(new x.constructor(x), ++dp, rm);\r\n    for (; x.c.length < dp;) x.c.push(0);\r\n  }\r\n\r\n  return stringify(x, true, !!n);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big in normal notation rounded to dp fixed\r\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n *\r\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n *\r\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n */\r\nP.toFixed = function (dp, rm) {\r\n  var x = this,\r\n    n = x.c[0];\r\n\r\n  if (dp !== UNDEFINED) {\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    x = round(new x.constructor(x), dp + x.e + 1, rm);\r\n\r\n    // x.e may have changed if the value is rounded up.\r\n    for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\r\n  }\r\n\r\n  return stringify(x, false, !!n);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big.\r\n * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n * Omit the sign for negative zero.\r\n */\r\nP.toJSON = P.toString = function () {\r\n  var x = this,\r\n    Big = x.constructor;\r\n  return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\r\n};\r\n\r\n\r\n/*\r\n * Return the value of this Big as a primitve number.\r\n */\r\nP.toNumber = function () {\r\n  var n = Number(stringify(this, true, true));\r\n  if (this.constructor.strict === true && !this.eq(n.toString())) {\r\n    throw Error(NAME + 'Imprecise conversion');\r\n  }\r\n  return n;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big rounded to sd significant digits using\r\n * rounding mode rm, or Big.RM if rm is not specified.\r\n * Use exponential notation if sd is less than the number of digits necessary to represent\r\n * the integer part of the value in normal notation.\r\n *\r\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n */\r\nP.toPrecision = function (sd, rm) {\r\n  var x = this,\r\n    Big = x.constructor,\r\n    n = x.c[0];\r\n\r\n  if (sd !== UNDEFINED) {\r\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n      throw Error(INVALID + 'precision');\r\n    }\r\n    x = round(new Big(x), sd, rm);\r\n    for (; x.c.length < sd;) x.c.push(0);\r\n  }\r\n\r\n  return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big.\r\n * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n * Include the sign for negative zero.\r\n */\r\nP.valueOf = function () {\r\n  var x = this,\r\n    Big = x.constructor;\r\n  if (Big.strict === true) {\r\n    throw Error(NAME + 'valueOf disallowed');\r\n  }\r\n  return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\r\n};\r\n\r\n\r\n// Export\r\n\r\n\r\nexport var Big = _Big_();\r\n\r\n/// <reference types=\"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/big.js/index.d.ts\" />\r\nexport default Big;\r\n","import is from './is/index';\nimport utils from './utils/index';\nimport obj from './obj/index';\nimport $big from 'big.js';\n\nexport default class quark {\n\tstatic n: string = 'quark';\n\tstatic version = {\n\t\tfull: '1.4.0',\n\t\tmajor: 1,\n\t\tminor: 4,\n\t\tbug: 0,\n\t};\n\n\tstatic big = $big;\n\n\tstatic is = is;\n\tstatic u = utils;\n\tstatic obj = obj;\n}\n"],"names":["prevArr","currArr","Set","_","getMergeFn","type","overwriteMerge","combineMerge","obj","Object","getPrototypeOf","prototype","toString","call","withDefaultOptions","options","assign","arrayMergeType","arrayMerge","merge","objects","opts","reduce","prev","curr","keys","forEach","key","Array","isArray","isObject","$merge","$obj","$arr","$str","DP","RM","MAX_DP","MAX_POWER","NE","PE","STRICT","NAME","INVALID","INVALID_DP","INVALID_RM","DIV_BY_ZERO","P","UNDEFINED","NUMERIC","_Big_","Big","n","x","s","e","c","slice","strict","TypeError","String","parse","constructor","i","nl","test","Error","charAt","indexOf","replace","search","substring","length","round","sd","rm","more","xc","unshift","pop","stringify","doExponential","isNonzero","join","abs","cmp","y","isneg","yc","j","k","l","div","a","b","dp","bl","bt","ri","bz","ai","al","r","rl","q","qc","qi","p","push","shift","eq","gt","gte","lt","lte","minus","sub","t","xlty","plus","xe","ye","reverse","mod","ygtx","times","add","pow","one","prec","sqrt","half","Math","toExponential","mul","toFixed","toJSON","toNumber","Number","toPrecision","valueOf","$big"],"mappings":"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"}