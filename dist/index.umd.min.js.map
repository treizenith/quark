{"version":3,"file":"index.umd.min.js","sources":["../src/is/array.ts","../src/is/object.ts","../src/utils/pure.ts","../src/is/string.ts","../src/is/index.ts","../src/is/boolean.ts","../src/is/date.ts","../src/is/function.ts","../src/is/null.ts","../src/is/number.ts","../src/is/promise.ts","../src/is/regexp.ts","../src/is/undefined.ts","../node_modules/.pnpm/@corex/deepmerge@2.5.3/node_modules/@corex/deepmerge/dist/esm/combine-merge/combineMerge.js","../node_modules/.pnpm/@corex/deepmerge@2.5.3/node_modules/@corex/deepmerge/dist/esm/overwrite-merge/overwriteMerge.js","../node_modules/.pnpm/@corex/deepmerge@2.5.3/node_modules/@corex/deepmerge/dist/esm/get-merge-fn/getMergeFn.js","../node_modules/.pnpm/@corex/deepmerge@2.5.3/node_modules/@corex/deepmerge/dist/esm/is-object/isObject.js","../node_modules/.pnpm/@corex/deepmerge@2.5.3/node_modules/@corex/deepmerge/dist/esm/merge/merge.js","../src/utils/index.ts","../src/utils/type.ts","../src/utils/merge.ts","../src/obj/index.ts","../src/obj/get.ts","../src/obj/set.ts","../src/obj/has.ts","../src/obj/delete.ts","../node_modules/.pnpm/big.js@6.0.3/node_modules/big.js/big.mjs","../src/quark.ts"],"sourcesContent":["/**\n * Checks if `value` is array.\n *\n * **Note:** strict array type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array, else `false`.\n * @example\n * ```ts\n * _.is.arr([true]);\n * // => true\n *\n * _.is.arr(\"alice\");\n * // => false\n * ```\n */\n\nexport default function arr(value?: unknown): value is any[] {\n\treturn Array.isArray(value);\n}\n","/**\n * Checks if `value` is object.\n *\n * **Note:** strict object type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object, else `false`.\n * @example\n * ```ts\n * _.is.obj({});\n * // => true\n *\n * _.is.obj(\"alice\");\n * // => false\n * ```\n */\n\nexport default function obj(value?: unknown): value is object {\n\treturn (\n\t\t!!value &&\n\t\ttypeof value == 'object' &&\n\t\t// @ts-ignore\n\t\tvalue.constructor == Object\n\t);\n\t// return $pureType.call(value) == '[object Object]';\n}\n","/**\n * returns the type absolute type.\n *\n * **Note:** returns strict type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} value The value to check.\n * @returns {string} Returns type of value.\n * @example\n * ```ts\n * _.utils.pure(\"alice\");\n * // => [object String]\n *\n * _.utils.pure(Promise.resolve());\n * // => [object Promise]\n * ```\n */\n\nexport default function pure(value: unknown): string {\n\treturn Object.prototype.toString.call(value);\n}\n","/**\n * Checks if `value` is string.\n *\n * **Note:** strict string type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {unknown} value The value to check.\n * @returns {boolean} Returns `true` if `value` is string, else `false`.\n * @example\n * ```ts\n * _.is.str(\"alice\");\n * // => true\n *\n * _.is.str(true);\n * // => false\n * ```\n */\n\nexport default function str(value?: unknown): value is string {\n\treturn typeof value == 'string';\n}\n","import arr from './array';\nimport bool from './boolean';\nimport date from './date';\nimport func from './function';\nimport nul from './null';\nimport num from './number';\nimport obj from './object';\nimport prom from './promise';\nimport reg from './regexp';\nimport str from './string';\nimport und from './undefined';\n\nexport default {\n\tarr,\n\tbool,\n\tdate,\n\tfunc,\n\tnul,\n\tnum,\n\tobj,\n\tprom,\n\treg,\n\tstr,\n\tund,\n};\n","/**\n * Checks if `value` is boolean.\n *\n * **Note:** strict boolean type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is boolean, else `false`.\n * @example\n * ```ts\n * _.is.bool(true);\n * // => true\n *\n * _.is.bool(\"alice\");\n * // => false\n * ```\n */\n\nexport default function bool(value?: unknown): value is boolean {\n\treturn typeof value === 'boolean';\n}\n","/**\n * Checks if `value` is date.\n *\n * **Note:** strict date type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is date, else `false`.\n * @example\n * ```ts\n * _.is.date(new Date());\n * // => true\n *\n * _.is.date(\"alice\");\n * // => false\n * ```\n */\n\nexport default function date(value?: unknown): value is Date {\n\treturn value instanceof Date;\n}\n","/**\n * Checks if `value` is function.\n *\n * **Note:** strict function type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is function, else `false`.\n * @example\n * ```ts\n * _.is.func(() => {});\n * // => true\n *\n * _.is.func(\"alice\");\n * // => false\n * ```\n */\n\nexport default function func(value?: unknown): value is Function {\n\t// @ts-ignore\n\treturn !!(value && value.constructor && value.call && value.apply);\n}\n","/**\n * Checks if `value` is null.\n *\n * **Note:** strict null type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is null, else `false`.\n * @example\n * ```ts\n * _.is.null(null);\n * // => true\n *\n * _.is.null(\"alice\");\n * // => false\n * ```\n */\nexport default function nul(value?: unknown): value is null {\n\treturn value === null;\n}\n","/**\n * Checks if `value` is number.\n *\n * **Note:** strict number type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is number, else `false`.\n * @example\n * ```ts\n * _.is.num(10);\n * // => true\n *\n * _.is.num(\"alice\");\n * // => false\n * ```\n */\nexport default function num(value?: unknown): value is number {\n\t// @ts-ignore\n\treturn !isNaN(value) && typeof value === 'number';\n}\n","import pure from '../utils/pure';\n\n/**\n * Checks if `value` is promise.\n *\n * **Note:** strict promise type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {unknown} value The value to check.\n * @returns {boolean} Returns `true` if `value` is promise, else `false`.\n * @example\n * ```ts\n * _.is.prom(Promise.resolve());\n * // => true\n *\n * _.is.prom(true);\n * // => false\n * ```\n */\n\nexport default function prom(value?: unknown): value is Promise<unknown> {\n\t// @ts-ignore\n\treturn value && pure(value) === '[object Promise]';\n}\n","import pure from '../utils/pure';\n\n/**\n * Checks if `value` is regexp.\n *\n * **Note:** strict regexp type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is regexp, else `false`.\n * @example\n * ```ts\n * _.is.reg(/[0-9]/);\n * // => true\n *\n * _.is.reg(\"alice\");\n * // => false\n * ```\n */\nexport default function reg(value?: unknown): value is RegExp {\n\treturn pure(value) == '[object RegExp]';\n}\n","/**\n * Checks if `value` is undefined.\n *\n * **Note:** strict undefined type !\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {unknown} value The value to check.\n * @returns {boolean} Returns `true` if `value` is undefined, else `false`.\n * @example\n * ```ts\n * _.is.und(undefined);\n * // => true\n *\n * _.is.und(true);\n * // => false\n * ```\n */\n\nexport default function und(value?: unknown): value is undefined {\n\treturn value === void 0;\n}\n","export default (prevArr, currArr) => {\n    return [...new Set([...prevArr, ...currArr])];\n};\n","export default (_, currArr) => currArr;\n","import { overwriteMerge } from '../overwrite-merge';\nimport { combineMerge } from '../combine-merge';\nconst getMergeFn = (type) => {\n    switch (type) {\n        case 'overwrite':\n            return overwriteMerge;\n        case 'combine':\n        default:\n            return combineMerge;\n    }\n};\nexport default getMergeFn;\n","// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default (obj) => {\n    if (typeof obj === 'object' && obj !== null) {\n        if (typeof Object.getPrototypeOf === 'function') {\n            const prototype = Object.getPrototypeOf(obj);\n            return prototype === Object.prototype || prototype === null;\n        }\n        return Object.prototype.toString.call(obj) === '[object Object]';\n    }\n    return false;\n};\n","import { isObject } from '../is-object';\nimport { getMergeFn } from '../get-merge-fn';\nconst withDefaultOptions = (options) => {\n    return Object.assign({ arrayMergeType: 'combine', arrayMerge: getMergeFn(options ? options.arrayMergeType : 'combine') }, options);\n};\nconst merge = (objects, options) => {\n    const opts = withDefaultOptions(options);\n    return objects.reduce((prev, curr) => {\n        Object.keys(curr).forEach((key) => {\n            if (Array.isArray(prev[key]) && Array.isArray(curr[key])) {\n                if (opts && opts.arrayMerge) {\n                    prev[key] = opts.arrayMerge(prev[key], curr[key]);\n                }\n            }\n            else if (isObject(prev[key]) && isObject(curr[key])) {\n                prev[key] = merge([prev[key], curr[key]], opts);\n            }\n            else {\n                prev[key] = curr[key];\n            }\n        });\n        return prev;\n    }, {});\n};\nexport default merge;\n","import pure from './pure';\nimport type from './type';\nimport merge from './merge';\n\nexport default {\n\tpure,\n\ttype,\n\tmerge,\n};\n","import pure from './pure';\n\n/**\n * returns the type absolute type.\n *\n * **Note:** returns strict type SLICED !!!\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} value The value to check.\n * @returns {string} Returns type of value.\n * @example\n * ```ts\n * _.is.utils.type(\"alice\");\n * // => String\n *\n * _.is.utils.type(Promise.resolve());\n * // => Promise\n * ```\n */\n\nexport default function type(value: unknown): string {\n\treturn pure(value).slice(8, -1);\n}\n","import { merge as $merge } from '@corex/deepmerge';\n\ntype GetObjDifferentKeys<T, U> = Omit<T, keyof U> & Omit<U, keyof T>;\n\ntype GetObjSameKeys<T, U> = Omit<T | U, keyof GetObjDifferentKeys<T, U>>;\n\ntype MergeTwoObjects<T, U> = Partial<GetObjDifferentKeys<T, U>> &\n\t{ [K in keyof GetObjSameKeys<T, U>]: DeepMergeTwoTypes<T[K], U[K]> };\n\nexport type DeepMergeTwoTypes<T, U> = [T, U] extends [\n\t(infer TItem)[],\n\t(infer UItem)[],\n]\n\t? DeepMergeTwoTypes<TItem, UItem>[]\n\t: [T, U] extends [{ [key: string]: unknown }, { [key: string]: unknown }]\n\t? MergeTwoObjects<T, U>\n\t: [T, U] extends [\n\t\t\t{ [key: string]: unknown } | undefined,\n\t\t\t{ [key: string]: unknown } | undefined,\n\t  ]\n\t? MergeTwoObjects<NonNullable<T>, NonNullable<U>> | undefined\n\t: T | U;\n\ntype Head<T extends any[]> = T extends [any, ...any[]] ? T[0] : never;\n\ntype Length<T extends any[]> = T['length'];\n\ntype Tail<T extends any[]> = T extends [any, ...infer TT] ? TT : [];\n\ntype DeepMergeResult<CurrResult, Objects extends any[]> = {\n\t0: CurrResult;\n\t1: DeepMergeResult<\n\t\tDeepMergeTwoTypes<CurrResult, Head<Objects>>,\n\t\tTail<Objects>\n\t>;\n}[Length<Objects> extends 0 ? 0 : 1];\n\ntype DeepMergeMany<Args extends any[]> = Args extends [\n\tinfer Item1,\n\t...infer Rest\n]\n\t? DeepMergeResult<Item1, Rest>\n\t: never;\n\n/**\n * merges all the objects.\n *\n * **Note:** KEEPS TYPES SAFE\n * @asMemberOf quark\n * @since 1.0.0\n * @category is\n * @param {*} values values to merge.\n * @returns {DEEPMERGED} Returns merged data.\n * @example\n *\n * // => NO EXAMPLE\n */\nexport default function merge<T extends any[]>(...args: T): DeepMergeMany<T> {\n\treturn $merge(args) as any;\n}\n","import get from './get';\nimport set from './set';\nimport has from './has';\nimport del from './delete';\n\nexport default {\n\tget,\n\tset,\n\thas,\n\tdel,\n};\n","import $obj from '../is/object';\nimport $arr from '../is/array';\nimport $str from '../is/string';\n\n/**\n * gets nested key from target\n *\n * @asMemberOf quark\n * @since 1.0.0\n * @category obj\n * @param {object|any[]} target The target.\n * @param {string|any[]} path The path of nested key.\n * @param {unknown} def The default value.\n * @returns {any} Returns `value` if path exist, else `undefined`.\n * @example\n * ```ts\n * let obj = {\n *  user: {\n *   name: \"alice\",\n *   surname: \"zuberg\"\n *  },\n *  items: [\"sword\", \"armor\"]\n * }\n *\n * _.obj.get(obj, \"user.name\");\n * // => \"alice\"\n *\n * _.obj.get(obj, \"user.age\", 19);\n * // => \"sword\"\n * ```\n */\n\nexport default function get(\n\ttarget: object | any[],\n\tpath: string | any[],\n\tdef?: unknown,\n): any {\n\tif (!$obj(target) && !$arr(target)) return target;\n\n\tif ($str(path)) {\n\t\tpath = path.toString().match(/[^.[\\]]+/g) || [];\n\t}\n\n\treturn path.reduce(\n\t\t(xs: any, x: any, _i: any, arr: any) =>\n\t\t\txs && xs[x] ? xs[x] : (arr.splice(1), def),\n\t\ttarget,\n\t);\n}\n","import $obj from '../is/object';\nimport $arr from '../is/array';\nimport $str from '../is/string';\n\n/**\n * sets nested key and value to target\n *\n * if any key (i) of the nested path doesnt exist on the target:\n * quark will create object or an array as default with these rules\n * if the key after that comes with our lost key (i+1) is a number then default will be an array\n * else the default will be an object\n *\n *\n * **Note:** mutates the target\n * @asMemberOf quark\n * @since 1.0.0\n * @category obj\n * @param {object|any[]} target The target.\n * @param {string|any[]} path The path of nested key.\n * @param {unknown} value The default value.\n * @returns {any} Returns mutated target.\n * @example\n * ```ts\n * // rule 1\n * _.obj.set({}, \"some.property\", 15);\n *\n * // {\n * //  some: {\n * //   property: 15\n * //  }\n * // }\n *\n * // rule 2\n * _.obj.set({}, \"some.0\", 15);\n *\n * // {\n * //  some: [15]\n * // }\n *\n * let obj = {}\n *\n * _.obj.set(obj, \"user\", 5);\n * // {\n * //  user: 5\n * // }\n *\n * _.obj.set(obj, \"user\");\n * // {\n * //  user: undefined\n * // }\n * ```\n */\n\nexport default function set(\n\tobj: object | any[],\n\tpath: string | any[],\n\tvalue?: unknown,\n): any {\n\tif (!$obj(obj) && !$arr(obj)) return obj;\n\n\tif ($str(path)) {\n\t\tpath = path.toString().match(/[^.[\\]]+/g) || [];\n\t}\n\n\tpath.slice(0, -1).reduce((a: any, c: any, i: any) => {\n\t\tif ($obj(a[c])) {\n\t\t\treturn a[c];\n\t\t} else {\n\t\t\tif (Math.abs(path[i + 1]) >> 0 === +path[i + 1]) {\n\t\t\t\treturn (a[c] = []);\n\t\t\t} else {\n\t\t\t\treturn (a[c] = {});\n\t\t\t}\n\t\t}\n\t}, obj)[path[path.length - 1]] = value;\n\n\treturn obj;\n}\n","import $obj from '../is/object';\nimport $arr from '../is/array';\nimport $str from '../is/string';\n\n/**\n * looks for path is it exist inside target.\n *\n * @asMemberOf quark\n * @since 1.0.0\n * @category obj\n * @param {object|any[]} target The target.\n * @param {string|any[]} path The path of nested key.\n * @returns {boolean} Returns `true` if path exist, else `false`.\n * @example\n * ```ts\n * let obj = {\n *  user: {\n *   name: \"alice\",\n *   surname: \"zuberg\"\n *  },\n *  items: [\"sword\", \"armor\"]\n * }\n *\n * _.obj.has(obj, \"user.name\");\n * // => true\n *\n * _.obj.has(obj, \"items.0\");\n * // => true\n *\n * _.obj.has(obj, \"user.age\");\n * // => false\n * ```\n */\n\nexport default function has(\n\ttarget: object | any[],\n\tpath: string | any[],\n): boolean {\n\tif (!$obj(target) && !$arr(target)) return target;\n\n\tif ($str(path)) {\n\t\tpath = path.toString().match(/[^.[\\]]+/g) || [];\n\t}\n\n\treturn path.reduce(\n\t\t(xs: any, x: any, i: any, arr: any[]) =>\n\t\t\txs && xs[x]\n\t\t\t\t? i == arr.length - 1 && Reflect.has(xs, x)\n\t\t\t\t\t? true\n\t\t\t\t\t: xs[x]\n\t\t\t\t: (arr.splice(1), false),\n\t\ttarget,\n\t);\n}\n","import $obj from '../is/object';\nimport $arr from '../is/array';\nimport $str from '../is/string';\n\n/**\n * delete the key from target.\n *\n * **Note:** mutates the target\n * @asMemberOf quark\n * @since 1.0.0\n * @category obj\n * @param {object|any[]} target The target.\n * @param {string|any[]} path The path of nested key.\n * @returns {any} Returns `deleted value` if path exist, else `undefined`.\n * @example\n * ```ts\n * let obj = {\n *  user: {\n *   name: \"alice\",\n *   surname: \"zuberg\"\n *  },\n *  items: [\"sword\", \"armor\"]\n * }\n *\n * _.obj.del(obj, \"user.name\");\n * // {\n * //  user: {\n * //   surname: \"zuberg\"\n * //  },\n * //  items: [\"sword\", \"armor\"]\n * // }\n *\n * _.obj.del(obj, \"items.0\");\n * // {\n * //  user: {\n * //   name: \"alice\",\n * //   surname: \"zuberg\"\n * //  },\n * //  items: [__emty__, \"armor\"]\n * // }\n * ```\n */\n\nexport default function del(target: object | any[], path: string | any[]): any {\n\tif (!$obj(target) && !$arr(target)) return target;\n\n\tif ($str(path)) {\n\t\tpath = path.toString().match(/[^.[\\]]+/g) || [];\n\t}\n\n\treturn path.reduce(\n\t\t(xs: any, x: any, i: any, arr: any[]) =>\n\t\t\txs && xs[x]\n\t\t\t\t? i == arr.length - 1 && Reflect.has(xs, x)\n\t\t\t\t\t? (() => {\n\t\t\t\t\t\t\tlet data = xs[x];\n\t\t\t\t\t\t\tReflect.deleteProperty(xs, x);\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t  })()\n\t\t\t\t\t: xs[x]\n\t\t\t\t: (arr.splice(1), false),\n\t\ttarget,\n\t);\n}\n","/*\r\n *  big.js v6.0.3\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2020 Michael Mclaughlin\r\n *  https://github.com/MikeMcl/big.js/LICENCE.md\r\n */\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n  // The default values below must be integers within the stated ranges.\r\n\r\n  /*\r\n   * The maximum number of decimal places (DP) of the results of operations involving division:\r\n   * div and sqrt, and pow with negative exponents.\r\n   */\r\nvar DP = 20,          // 0 to MAX_DP\r\n\r\n  /*\r\n   * The rounding mode (RM) used when rounding to the above decimal places.\r\n   *\r\n   *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n   *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n   *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n   *  3  Away from zero.                                  (ROUND_UP)\r\n   */\r\n  RM = 1,             // 0, 1, 2 or 3\r\n\r\n  // The maximum value of DP and Big.DP.\r\n  MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n  // The maximum magnitude of the exponent argument to the pow method.\r\n  MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n  /*\r\n   * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n   * (JavaScript numbers: -7)\r\n   * -1000000 is the minimum recommended exponent value of a Big.\r\n   */\r\n  NE = -7,            // 0 to -1000000\r\n\r\n  /*\r\n   * The positive exponent (PE) at and above which toString returns exponential notation.\r\n   * (JavaScript numbers: 21)\r\n   * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\r\n   */\r\n  PE = 21,            // 0 to 1000000\r\n\r\n  /*\r\n   * When true, an error will be thrown if a primitive number is passed to the Big constructor,\r\n   * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\r\n   * primitive number without a loss of precision.\r\n   */\r\n  STRICT = false,     // true or false\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n  // Error messages.\r\n  NAME = '[big.js] ',\r\n  INVALID = NAME + 'Invalid ',\r\n  INVALID_DP = INVALID + 'decimal places',\r\n  INVALID_RM = INVALID + 'rounding mode',\r\n  DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n  // The shared prototype object.\r\n  P = {},\r\n  UNDEFINED = void 0,\r\n  NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n/*\r\n * Create and return a Big constructor.\r\n */\r\nfunction _Big_() {\r\n\r\n  /*\r\n   * The Big constructor and exported function.\r\n   * Create and return a new instance of a Big number object.\r\n   *\r\n   * n {number|string|Big} A numeric value.\r\n   */\r\n  function Big(n) {\r\n    var x = this;\r\n\r\n    // Enable constructor usage without new.\r\n    if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n    // Duplicate.\r\n    if (n instanceof Big) {\r\n      x.s = n.s;\r\n      x.e = n.e;\r\n      x.c = n.c.slice();\r\n    } else {\r\n      if (typeof n !== 'string') {\r\n        if (Big.strict === true) {\r\n          throw TypeError(INVALID + 'number');\r\n        }\r\n\r\n        // Minus zero?\r\n        n = n === 0 && 1 / n < 0 ? '-0' : String(n);\r\n      }\r\n\r\n      parse(x, n);\r\n    }\r\n\r\n    // Retain a reference to this Big constructor.\r\n    // Shadow Big.prototype.constructor which points to Object.\r\n    x.constructor = Big;\r\n  }\r\n\r\n  Big.prototype = P;\r\n  Big.DP = DP;\r\n  Big.RM = RM;\r\n  Big.NE = NE;\r\n  Big.PE = PE;\r\n  Big.strict = STRICT;\r\n\r\n  return Big;\r\n}\r\n\r\n\r\n/*\r\n * Parse the number or string value passed to a Big constructor.\r\n *\r\n * x {Big} A Big number instance.\r\n * n {number|string} A numeric value.\r\n */\r\nfunction parse(x, n) {\r\n  var e, i, nl;\r\n\r\n  if (!NUMERIC.test(n)) {\r\n    throw Error(INVALID + 'number');\r\n  }\r\n\r\n  // Determine sign.\r\n  x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n  // Decimal point?\r\n  if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n  // Exponential form?\r\n  if ((i = n.search(/e/i)) > 0) {\r\n\r\n    // Determine exponent.\r\n    if (e < 0) e = i;\r\n    e += +n.slice(i + 1);\r\n    n = n.substring(0, i);\r\n  } else if (e < 0) {\r\n\r\n    // Integer.\r\n    e = n.length;\r\n  }\r\n\r\n  nl = n.length;\r\n\r\n  // Determine leading zeros.\r\n  for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n  if (i == nl) {\r\n\r\n    // Zero.\r\n    x.c = [x.e = 0];\r\n  } else {\r\n\r\n    // Determine trailing zeros.\r\n    for (; nl > 0 && n.charAt(--nl) == '0';);\r\n    x.e = e - i - 1;\r\n    x.c = [];\r\n\r\n    // Convert string to array of digits without leading/trailing zeros.\r\n    for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Round Big x to a maximum of sd significant digits using rounding mode rm.\r\n *\r\n * x {Big} The Big to round.\r\n * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\r\n * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n * [more] {boolean} Whether the result of division was truncated.\r\n */\r\nfunction round(x, sd, rm, more) {\r\n  var xc = x.c;\r\n\r\n  if (rm === UNDEFINED) rm = Big.RM;\r\n  if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\r\n    throw Error(INVALID_RM);\r\n  }\r\n\r\n  if (sd < 1) {\r\n    more =\r\n      rm === 3 && (more || !!xc[0]) || sd === 0 && (\r\n      rm === 1 && xc[0] >= 5 ||\r\n      rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\r\n    );\r\n\r\n    xc.length = 1;\r\n\r\n    if (more) {\r\n\r\n      // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n      x.e = x.e - sd + 1;\r\n      xc[0] = 1;\r\n    } else {\r\n\r\n      // Zero.\r\n      xc[0] = x.e = 0;\r\n    }\r\n  } else if (sd < xc.length) {\r\n\r\n    // xc[sd] is the digit after the digit that may be rounded up.\r\n    more =\r\n      rm === 1 && xc[sd] >= 5 ||\r\n      rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\r\n        (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\r\n      rm === 3 && (more || !!xc[0]);\r\n\r\n    // Remove any digits after the required precision.\r\n    xc.length = sd--;\r\n\r\n    // Round up?\r\n    if (more) {\r\n\r\n      // Rounding up may mean the previous digit has to be rounded up.\r\n      for (; ++xc[sd] > 9;) {\r\n        xc[sd] = 0;\r\n        if (!sd--) {\r\n          ++x.e;\r\n          xc.unshift(1);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (sd = xc.length; !xc[--sd];) xc.pop();\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Return a string representing the value of Big x in normal or exponential notation.\r\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n */\r\nfunction stringify(x, doExponential, isNonzero) {\r\n  var e = x.e,\r\n    s = x.c.join(''),\r\n    n = s.length;\r\n\r\n  // Exponential notation?\r\n  if (doExponential) {\r\n    s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n  // Normal notation.\r\n  } else if (e < 0) {\r\n    for (; ++e;) s = '0' + s;\r\n    s = '0.' + s;\r\n  } else if (e > 0) {\r\n    if (++e > n) {\r\n      for (e -= n; e--;) s += '0';\r\n    } else if (e < n) {\r\n      s = s.slice(0, e) + '.' + s.slice(e);\r\n    }\r\n  } else if (n > 1) {\r\n    s = s.charAt(0) + '.' + s.slice(1);\r\n  }\r\n\r\n  return x.s < 0 && isNonzero ? '-' + s : s;\r\n}\r\n\r\n\r\n// Prototype/instance methods\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the absolute value of this Big.\r\n */\r\nP.abs = function () {\r\n  var x = new this.constructor(this);\r\n  x.s = 1;\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return 1 if the value of this Big is greater than the value of Big y,\r\n *       -1 if the value of this Big is less than the value of Big y, or\r\n *        0 if they have the same value.\r\n */\r\nP.cmp = function (y) {\r\n  var isneg,\r\n    x = this,\r\n    xc = x.c,\r\n    yc = (y = new x.constructor(y)).c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either zero?\r\n  if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  isneg = i < 0;\r\n\r\n  // Compare exponents.\r\n  if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = -1; ++i < j;) {\r\n    if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n  }\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n */\r\nP.div = function (y) {\r\n  var x = this,\r\n    Big = x.constructor,\r\n    a = x.c,                  // dividend\r\n    b = (y = new Big(y)).c,   // divisor\r\n    k = x.s == y.s ? 1 : -1,\r\n    dp = Big.DP;\r\n\r\n  if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n    throw Error(INVALID_DP);\r\n  }\r\n\r\n  // Divisor is zero?\r\n  if (!b[0]) {\r\n    throw Error(DIV_BY_ZERO);\r\n  }\r\n\r\n  // Dividend is 0? Return +-0.\r\n  if (!a[0]) {\r\n    y.s = k;\r\n    y.c = [y.e = 0];\r\n    return y;\r\n  }\r\n\r\n  var bl, bt, n, cmp, ri,\r\n    bz = b.slice(),\r\n    ai = bl = b.length,\r\n    al = a.length,\r\n    r = a.slice(0, bl),   // remainder\r\n    rl = r.length,\r\n    q = y,                // quotient\r\n    qc = q.c = [],\r\n    qi = 0,\r\n    p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\r\n\r\n  q.s = k;\r\n  k = p < 0 ? 0 : p;\r\n\r\n  // Create version of divisor with leading zero.\r\n  bz.unshift(0);\r\n\r\n  // Add zeros to make remainder as long as divisor.\r\n  for (; rl++ < bl;) r.push(0);\r\n\r\n  do {\r\n\r\n    // n is how many times the divisor goes into current remainder.\r\n    for (n = 0; n < 10; n++) {\r\n\r\n      // Compare divisor and remainder.\r\n      if (bl != (rl = r.length)) {\r\n        cmp = bl > rl ? 1 : -1;\r\n      } else {\r\n        for (ri = -1, cmp = 0; ++ri < bl;) {\r\n          if (b[ri] != r[ri]) {\r\n            cmp = b[ri] > r[ri] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // If divisor < remainder, subtract divisor from remainder.\r\n      if (cmp < 0) {\r\n\r\n        // Remainder can't be more than 1 digit longer than divisor.\r\n        // Equalise lengths using divisor with extra leading zero?\r\n        for (bt = rl == bl ? b : bz; rl;) {\r\n          if (r[--rl] < bt[rl]) {\r\n            ri = rl;\r\n            for (; ri && !r[--ri];) r[ri] = 9;\r\n            --r[ri];\r\n            r[rl] += 10;\r\n          }\r\n          r[rl] -= bt[rl];\r\n        }\r\n\r\n        for (; !r[0];) r.shift();\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Add the digit n to the result array.\r\n    qc[qi++] = cmp ? n : ++n;\r\n\r\n    // Update the remainder.\r\n    if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n    else r = [a[ai]];\r\n\r\n  } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n  // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n  if (!qc[0] && qi != 1) {\r\n\r\n    // There can't be more than one zero.\r\n    qc.shift();\r\n    q.e--;\r\n    p--;\r\n  }\r\n\r\n  // Round?\r\n  if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\r\n\r\n  return q;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n */\r\nP.eq = function (y) {\r\n  return this.cmp(y) === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n * false.\r\n */\r\nP.gt = function (y) {\r\n  return this.cmp(y) > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n * return false.\r\n */\r\nP.gte = function (y) {\r\n  return this.cmp(y) > -1;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n */\r\nP.lt = function (y) {\r\n  return this.cmp(y) < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n * return false.\r\n */\r\nP.lte = function (y) {\r\n  return this.cmp(y) < 1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n */\r\nP.minus = P.sub = function (y) {\r\n  var i, j, t, xlty,\r\n    x = this,\r\n    Big = x.constructor,\r\n    a = x.s,\r\n    b = (y = new Big(y)).s;\r\n\r\n  // Signs differ?\r\n  if (a != b) {\r\n    y.s = -b;\r\n    return x.plus(y);\r\n  }\r\n\r\n  var xc = x.c.slice(),\r\n    xe = x.e,\r\n    yc = y.c,\r\n    ye = y.e;\r\n\r\n  // Either zero?\r\n  if (!xc[0] || !yc[0]) {\r\n    if (yc[0]) {\r\n      y.s = -b;\r\n    } else if (xc[0]) {\r\n      y = new Big(x);\r\n    } else {\r\n      y.s = 1;\r\n    }\r\n    return y;\r\n  }\r\n\r\n  // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n  if (a = xe - ye) {\r\n\r\n    if (xlty = a < 0) {\r\n      a = -a;\r\n      t = xc;\r\n    } else {\r\n      ye = xe;\r\n      t = yc;\r\n    }\r\n\r\n    t.reverse();\r\n    for (b = a; b--;) t.push(0);\r\n    t.reverse();\r\n  } else {\r\n\r\n    // Exponents equal. Check digit by digit.\r\n    j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n    for (a = b = 0; b < j; b++) {\r\n      if (xc[b] != yc[b]) {\r\n        xlty = xc[b] < yc[b];\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // x < y? Point xc to the array of the bigger number.\r\n  if (xlty) {\r\n    t = xc;\r\n    xc = yc;\r\n    yc = t;\r\n    y.s = -y.s;\r\n  }\r\n\r\n  /*\r\n   * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n   * needs to start at yc.length.\r\n   */\r\n  if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n  // Subtract yc from xc.\r\n  for (b = i; j > a;) {\r\n    if (xc[--j] < yc[j]) {\r\n      for (i = j; i && !xc[--i];) xc[i] = 9;\r\n      --xc[i];\r\n      xc[j] += 10;\r\n    }\r\n\r\n    xc[j] -= yc[j];\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; xc[--b] === 0;) xc.pop();\r\n\r\n  // Remove leading zeros and adjust exponent accordingly.\r\n  for (; xc[0] === 0;) {\r\n    xc.shift();\r\n    --ye;\r\n  }\r\n\r\n  if (!xc[0]) {\r\n\r\n    // n - n = +0\r\n    y.s = 1;\r\n\r\n    // Result must be zero.\r\n    xc = [ye = 0];\r\n  }\r\n\r\n  y.c = xc;\r\n  y.e = ye;\r\n\r\n  return y;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n */\r\nP.mod = function (y) {\r\n  var ygtx,\r\n    x = this,\r\n    Big = x.constructor,\r\n    a = x.s,\r\n    b = (y = new Big(y)).s;\r\n\r\n  if (!y.c[0]) {\r\n    throw Error(DIV_BY_ZERO);\r\n  }\r\n\r\n  x.s = y.s = 1;\r\n  ygtx = y.cmp(x) == 1;\r\n  x.s = a;\r\n  y.s = b;\r\n\r\n  if (ygtx) return new Big(x);\r\n\r\n  a = Big.DP;\r\n  b = Big.RM;\r\n  Big.DP = Big.RM = 0;\r\n  x = x.div(y);\r\n  Big.DP = a;\r\n  Big.RM = b;\r\n\r\n  return this.minus(x.times(y));\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n */\r\nP.plus = P.add = function (y) {\r\n  var e, k, t,\r\n    x = this,\r\n    Big = x.constructor;\r\n\r\n  y = new Big(y);\r\n\r\n  // Signs differ?\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.minus(y);\r\n  }\r\n\r\n  var xe = x.e,\r\n    xc = x.c,\r\n    ye = y.e,\r\n    yc = y.c;\r\n\r\n  // Either zero?\r\n  if (!xc[0] || !yc[0]) {\r\n    if (!yc[0]) {\r\n      if (xc[0]) {\r\n        y = new Big(x);\r\n      } else {\r\n        y.s = x.s;\r\n      }\r\n    }\r\n    return y;\r\n  }\r\n\r\n  xc = xc.slice();\r\n\r\n  // Prepend zeros to equalise exponents.\r\n  // Note: reverse faster than unshifts.\r\n  if (e = xe - ye) {\r\n    if (e > 0) {\r\n      ye = xe;\r\n      t = yc;\r\n    } else {\r\n      e = -e;\r\n      t = xc;\r\n    }\r\n\r\n    t.reverse();\r\n    for (; e--;) t.push(0);\r\n    t.reverse();\r\n  }\r\n\r\n  // Point xc to the longer array.\r\n  if (xc.length - yc.length < 0) {\r\n    t = yc;\r\n    yc = xc;\r\n    xc = t;\r\n  }\r\n\r\n  e = yc.length;\r\n\r\n  // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n  for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\r\n\r\n  // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n  if (k) {\r\n    xc.unshift(k);\r\n    ++ye;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (e = xc.length; xc[--e] === 0;) xc.pop();\r\n\r\n  y.c = xc;\r\n  y.e = ye;\r\n\r\n  return y;\r\n};\r\n\r\n\r\n/*\r\n * Return a Big whose value is the value of this Big raised to the power n.\r\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n * mode Big.RM.\r\n *\r\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n */\r\nP.pow = function (n) {\r\n  var x = this,\r\n    one = new x.constructor('1'),\r\n    y = one,\r\n    isneg = n < 0;\r\n\r\n  if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n    throw Error(INVALID + 'exponent');\r\n  }\r\n\r\n  if (isneg) n = -n;\r\n\r\n  for (;;) {\r\n    if (n & 1) y = y.times(x);\r\n    n >>= 1;\r\n    if (!n) break;\r\n    x = x.times(x);\r\n  }\r\n\r\n  return isneg ? one.div(y) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\r\n * significant digits using rounding mode rm, or Big.RM if rm is not specified.\r\n *\r\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n */\r\nP.prec = function (sd, rm) {\r\n  if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n    throw Error(INVALID + 'precision');\r\n  }\r\n  return round(new this.constructor(this), sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\r\n * using rounding mode rm, or Big.RM if rm is not specified.\r\n * If dp is negative, round to an integer which is a multiple of 10**-dp.\r\n * If dp is not specified, round to 0 decimal places.\r\n *\r\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n */\r\nP.round = function (dp, rm) {\r\n  if (dp === UNDEFINED) dp = 0;\r\n  else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\r\n    throw Error(INVALID_DP);\r\n  }\r\n  return round(new this.constructor(this), dp + this.e + 1, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n */\r\nP.sqrt = function () {\r\n  var r, c, t,\r\n    x = this,\r\n    Big = x.constructor,\r\n    s = x.s,\r\n    e = x.e,\r\n    half = new Big('0.5');\r\n\r\n  // Zero?\r\n  if (!x.c[0]) return new Big(x);\r\n\r\n  // Negative?\r\n  if (s < 0) {\r\n    throw Error(NAME + 'No square root');\r\n  }\r\n\r\n  // Estimate.\r\n  s = Math.sqrt(x + '');\r\n\r\n  // Math.sqrt underflow/overflow?\r\n  // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n  if (s === 0 || s === 1 / 0) {\r\n    c = x.c.join('');\r\n    if (!(c.length + e & 1)) c += '0';\r\n    s = Math.sqrt(c);\r\n    e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n    r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n  } else {\r\n    r = new Big(s + '');\r\n  }\r\n\r\n  e = r.e + (Big.DP += 4);\r\n\r\n  // Newton-Raphson iteration.\r\n  do {\r\n    t = r;\r\n    r = half.times(t.plus(x.div(t)));\r\n  } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n  return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big times the value of Big y.\r\n */\r\nP.times = P.mul = function (y) {\r\n  var c,\r\n    x = this,\r\n    Big = x.constructor,\r\n    xc = x.c,\r\n    yc = (y = new Big(y)).c,\r\n    a = xc.length,\r\n    b = yc.length,\r\n    i = x.e,\r\n    j = y.e;\r\n\r\n  // Determine sign of result.\r\n  y.s = x.s == y.s ? 1 : -1;\r\n\r\n  // Return signed 0 if either 0.\r\n  if (!xc[0] || !yc[0]) {\r\n    y.c = [y.e = 0];\r\n    return y;\r\n  }\r\n\r\n  // Initialise exponent of result as x.e + y.e.\r\n  y.e = i + j;\r\n\r\n  // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n  if (a < b) {\r\n    c = xc;\r\n    xc = yc;\r\n    yc = c;\r\n    j = a;\r\n    a = b;\r\n    b = j;\r\n  }\r\n\r\n  // Initialise coefficient array of result with zeros.\r\n  for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n  // Multiply.\r\n\r\n  // i is initially xc.length.\r\n  for (i = b; i--;) {\r\n    b = 0;\r\n\r\n    // a is yc.length.\r\n    for (j = a + i; j > i;) {\r\n\r\n      // Current sum of products at this digit position, plus carry.\r\n      b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n      c[j--] = b % 10;\r\n\r\n      // carry\r\n      b = b / 10 | 0;\r\n    }\r\n\r\n    c[j] = b;\r\n  }\r\n\r\n  // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n  if (b) ++y.e;\r\n  else c.shift();\r\n\r\n  // Remove trailing zeros.\r\n  for (i = c.length; !c[--i];) c.pop();\r\n  y.c = c;\r\n\r\n  return y;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big in exponential notation rounded to dp fixed\r\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n *\r\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n */\r\nP.toExponential = function (dp, rm) {\r\n  var x = this,\r\n    n = x.c[0];\r\n\r\n  if (dp !== UNDEFINED) {\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    x = round(new x.constructor(x), ++dp, rm);\r\n    for (; x.c.length < dp;) x.c.push(0);\r\n  }\r\n\r\n  return stringify(x, true, !!n);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big in normal notation rounded to dp fixed\r\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n *\r\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n *\r\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n */\r\nP.toFixed = function (dp, rm) {\r\n  var x = this,\r\n    n = x.c[0];\r\n\r\n  if (dp !== UNDEFINED) {\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    x = round(new x.constructor(x), dp + x.e + 1, rm);\r\n\r\n    // x.e may have changed if the value is rounded up.\r\n    for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\r\n  }\r\n\r\n  return stringify(x, false, !!n);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big.\r\n * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n * Omit the sign for negative zero.\r\n */\r\nP.toJSON = P.toString = function () {\r\n  var x = this,\r\n    Big = x.constructor;\r\n  return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\r\n};\r\n\r\n\r\n/*\r\n * Return the value of this Big as a primitve number.\r\n */\r\nP.toNumber = function () {\r\n  var n = Number(stringify(this, true, true));\r\n  if (this.constructor.strict === true && !this.eq(n.toString())) {\r\n    throw Error(NAME + 'Imprecise conversion');\r\n  }\r\n  return n;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big rounded to sd significant digits using\r\n * rounding mode rm, or Big.RM if rm is not specified.\r\n * Use exponential notation if sd is less than the number of digits necessary to represent\r\n * the integer part of the value in normal notation.\r\n *\r\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n */\r\nP.toPrecision = function (sd, rm) {\r\n  var x = this,\r\n    Big = x.constructor,\r\n    n = x.c[0];\r\n\r\n  if (sd !== UNDEFINED) {\r\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n      throw Error(INVALID + 'precision');\r\n    }\r\n    x = round(new Big(x), sd, rm);\r\n    for (; x.c.length < sd;) x.c.push(0);\r\n  }\r\n\r\n  return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big.\r\n * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n * Include the sign for negative zero.\r\n */\r\nP.valueOf = function () {\r\n  var x = this,\r\n    Big = x.constructor;\r\n  if (Big.strict === true) {\r\n    throw Error(NAME + 'valueOf disallowed');\r\n  }\r\n  return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\r\n};\r\n\r\n\r\n// Export\r\n\r\n\r\nexport var Big = _Big_();\r\n\r\n/// <reference types=\"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/big.js/index.d.ts\" />\r\nexport default Big;\r\n","import is from './is/index';\nimport utils from './utils/index';\nimport obj from './obj/index';\nimport $big from 'big.js';\n\nexport default class quark {\n\tstatic n: string = 'quark';\n\tstatic version = {\n\t\tfull: '1.4.0',\n\t\tmajor: 1,\n\t\tminor: 4,\n\t\tbug: 0,\n\t};\n\n\tstatic big = $big;\n\n\tstatic is = is;\n\tstatic u = utils;\n\tstatic obj = obj;\n}\n"],"names":["arr","value","Array","isArray","obj","constructor","Object","pure","prototype","toString","call","str","bool","date","Date","func","apply","nul","num","isNaN","prom","reg","und","prevArr","currArr","Set","_","getMergeFn","type","overwriteMerge","combineMerge","getPrototypeOf","merge","objects","options","opts","assign","arrayMergeType","arrayMerge","withDefaultOptions","reduce","prev","curr","keys","forEach","key","isObject","slice","args","$merge","get","target","path","def","$obj","$arr","$str","match","xs","x","_i","splice","set","a","c","i","Math","abs","length","has","Reflect","del","data","deleteProperty","MAX_DP","MAX_POWER","NAME","INVALID","INVALID_DP","DIV_BY_ZERO","P","UNDEFINED","NUMERIC","round","sd","rm","more","xc","Big","RM","Error","e","unshift","pop","stringify","doExponential","isNonzero","s","join","n","charAt","this","cmp","y","isneg","yc","j","k","l","div","b","dp","DP","bl","bt","ri","bz","ai","al","r","rl","q","qc","qi","p","push","shift","eq","gt","gte","lt","lte","minus","sub","t","xlty","plus","xe","ye","reverse","mod","ygtx","times","add","pow","one","prec","sqrt","half","toExponential","indexOf","mul","toFixed","toJSON","NE","PE","toNumber","Number","strict","toPrecision","valueOf","_Big_","TypeError","String","nl","test","replace","search","substring","parse","quark","full","major","minor","bug","$big","is","utils"],"mappings":";;;;;+OAmBwBA,EAAIC,GAC3B,OAAOC,MAAMC,QAAQF,YCDEG,EAAIH,GAC3B,QACGA,GACc,iBAATA,GAEPA,EAAMI,aAAeC,gBCLCC,EAAKN,GAC5B,OAAOK,OAAOE,UAAUC,SAASC,KAAKT,YCDfU,EAAIV,GAC3B,MAAuB,iBAATA,QCRA,CACdD,IAAAA,EACAY,cCK4BX,GAC5B,MAAwB,kBAAVA,GDLdY,cEI4BZ,GAC5B,OAAOA,aAAiBa,MFJxBC,cGG4Bd,GAE5B,SAAUA,GAASA,EAAMI,aAAeJ,EAAMS,MAAQT,EAAMe,QHJ5DC,aIC2BhB,GAC3B,OAAiB,OAAVA,GJDPiB,aKA2BjB,GAE3B,OAAQkB,MAAMlB,IAA2B,iBAAVA,GLD/BG,IAAAA,EACAgB,cMC4BnB,GAE5B,OAAOA,GAAyB,qBAAhBM,EAAKN,INFrBoB,aOD2BpB,GAC3B,MAAsB,mBAAfM,EAAKN,IPCZU,IAAAA,EACAW,aQJ2BrB,GAC3B,YAAiB,IAAVA,WCpBQsB,EAASC,IACd,IAAI,IAAIC,IAAI,IAAIF,KAAYC,QCDvBE,EAAGF,IAAYA,ECE/B,MAAMG,EAAcC,WACRA,OACC,mBACMC,MACN,yBAEMC,UCPH1B,OACO,iBAARA,GAA4B,OAARA,EAAc,IACJ,mBAA1BE,OAAOyB,eAA+B,OACvCvB,EAAYF,OAAOyB,eAAe3B,UACjCI,IAAcF,OAAOE,WAA2B,OAAdA,QAEE,oBAAxCF,OAAOE,UAAUC,SAASC,KAAKN,UAEnC,GCPX,MAGM4B,EAAQ,CAACC,EAASC,WACdC,EAJkBD,CAAAA,GACjB5B,OAAO8B,OAAO,CAAEC,eAAgB,UAAWC,WAAYX,EAAWO,EAAUA,EAAQG,eAAiB,YAAcH,GAG7GK,CAAmBL,UACzBD,EAAQO,QAAO,CAACC,EAAMC,KACzBpC,OAAOqC,KAAKD,GAAME,SAASC,IACnB3C,MAAMC,QAAQsC,EAAKI,KAAS3C,MAAMC,QAAQuC,EAAKG,IAC3CV,GAAQA,EAAKG,aACbG,EAAKI,GAAOV,EAAKG,WAAWG,EAAKI,GAAMH,EAAKG,KAG3CC,EAASL,EAAKI,KAASC,EAASJ,EAAKG,IAC1CJ,EAAKI,GAAOb,EAAM,CAACS,EAAKI,GAAMH,EAAKG,IAAOV,GAG1CM,EAAKI,GAAOH,EAAKG,MAGlBJ,IACR,WClBQ,CACdlC,KAAAA,EACAqB,cCe4B3B,GAC5B,OAAOM,EAAKN,GAAO8C,MAAM,GAAI,sBCmCoBC,GACjD,OAAOC,EAAOD,WCrDA,CACdE,aC2BAC,EACAC,EACAC,GAEA,OAAKC,EAAKH,IAAYI,EAAKJ,IAEvBK,EAAKJ,KACRA,EAAOA,EAAK3C,WAAWgD,MAAM,cAAgB,IAGvCL,EAAKZ,QACX,CAACkB,EAASC,EAAQC,EAAS5D,IAC1B0D,GAAMA,EAAGC,GAAKD,EAAGC,IAAM3D,EAAI6D,OAAO,GAAIR,IACvCF,IAT0CA,GD9B3CW,aE+CA1D,EACAgD,EACAnD,GAEA,OAAKqD,EAAKlD,IAASmD,EAAKnD,IAEpBoD,EAAKJ,KACRA,EAAOA,EAAK3C,WAAWgD,MAAM,cAAgB,IAG9CL,EAAKL,MAAM,GAAI,GAAGP,QAAO,CAACuB,EAAQC,EAAQC,IACrCX,EAAKS,EAAEC,IACHD,EAAEC,GAELE,KAAKC,IAAIf,EAAKa,EAAI,KAAO,IAAOb,EAAKa,EAAI,GACpCF,EAAEC,GAAK,GAEPD,EAAEC,GAAK,IAGf5D,GAAKgD,EAAKA,EAAKgB,OAAS,IAAMnE,EAE1BG,GAlB8BA,GFlDrCiE,aG2BAlB,EACAC,GAEA,OAAKE,EAAKH,IAAYI,EAAKJ,IAEvBK,EAAKJ,KACRA,EAAOA,EAAK3C,WAAWgD,MAAM,cAAgB,IAGvCL,EAAKZ,QACX,CAACkB,EAASC,EAAQM,EAAQjE,IACzB0D,GAAMA,EAAGC,KACNM,GAAKjE,EAAIoE,OAAS,IAAKE,QAAQD,IAAIX,EAAIC,KAEtCD,EAAGC,IACH3D,EAAI6D,OAAO,IAAI,IACpBV,IAb0CA,GH7B3CoB,aIkC2BpB,EAAwBC,GACnD,OAAKE,EAAKH,IAAYI,EAAKJ,IAEvBK,EAAKJ,KACRA,EAAOA,EAAK3C,WAAWgD,MAAM,cAAgB,IAGvCL,EAAKZ,QACX,CAACkB,EAASC,EAAQM,EAAQjE,IACzB0D,GAAMA,EAAGC,GACNM,GAAKjE,EAAIoE,OAAS,GAAKE,QAAQD,IAAIX,EAAIC,GACtC,MACA,IAAIa,EAAOd,EAAGC,GAEd,OADAW,QAAQG,eAAef,EAAIC,GACpBa,GAHP,GAKAd,EAAGC,IACH3D,EAAI6D,OAAO,IAAI,IACpBV,IAjB0CA,ICd1CuB,EAAS,IAGTC,EAAY,IA4BZC,EAAO,YACPC,EAAUD,EAAO,WACjBE,EAAaD,EAAU,iBAEvBE,EAAcH,EAAO,mBAGrBI,EAAI,GACJC,OAAY,EACZC,EAAU,uCAsHZ,SAASC,EAAMxB,EAAGyB,EAAIC,EAAIC,OACpBC,EAAK5B,EAAEK,KAEPqB,IAAOJ,IAAWI,EAAKG,EAAIC,IACpB,IAAPJ,GAAmB,IAAPA,GAAmB,IAAPA,GAAmB,IAAPA,QAChCK,MAjIKb,qCAoITO,EAAK,EACPE,EACS,IAAPD,IAAaC,KAAUC,EAAG,KAAc,IAAPH,IAC1B,IAAPC,GAAYE,EAAG,IAAM,GACd,IAAPF,IAAaE,EAAG,GAAK,GAAe,IAAVA,EAAG,KAAaD,GAAQC,EAAG,KAAON,KAG9DM,EAAGnB,OAAS,EAERkB,GAGF3B,EAAEgC,EAAIhC,EAAEgC,EAAIP,EAAK,EACjBG,EAAG,GAAK,GAIRA,EAAG,GAAK5B,EAAEgC,EAAI,OAEX,GAAIP,EAAKG,EAAGnB,OAAQ,IAGzBkB,EACS,IAAPD,GAAYE,EAAGH,IAAO,GACf,IAAPC,IAAaE,EAAGH,GAAM,GAAgB,IAAXG,EAAGH,KAC3BE,GAAQC,EAAGH,EAAK,KAAOH,GAA0B,EAAbM,EAAGH,EAAK,MACxC,IAAPC,IAAaC,KAAUC,EAAG,IAG5BA,EAAGnB,OAASgB,IAGRE,SAGOC,EAAGH,GAAM,GAChBG,EAAGH,GAAM,EACJA,QACDzB,EAAEgC,EACJJ,EAAGK,QAAQ,QAMZR,EAAKG,EAAGnB,QAASmB,IAAKH,IAAMG,EAAGM,aAG/BlC,EAQT,SAASmC,EAAUnC,EAAGoC,EAAeC,OAC/BL,EAAIhC,EAAEgC,EACRM,EAAItC,EAAEK,EAAEkC,KAAK,IACbC,EAAIF,EAAE7B,UAGJ2B,EACFE,EAAIA,EAAEG,OAAO,IAAMD,EAAI,EAAI,IAAMF,EAAElD,MAAM,GAAK,KAAO4C,EAAI,EAAI,IAAM,MAAQA,OAGtE,GAAIA,EAAI,EAAG,QACPA,GAAIM,EAAI,IAAMA,EACvBA,EAAI,KAAOA,OACN,GAAIN,EAAI,OACPA,EAAIQ,MACHR,GAAKQ,EAAGR,KAAMM,GAAK,SACfN,EAAIQ,IACbF,EAAIA,EAAElD,MAAM,EAAG4C,GAAK,IAAMM,EAAElD,MAAM4C,SAE3BQ,EAAI,IACbF,EAAIA,EAAEG,OAAO,GAAK,IAAMH,EAAElD,MAAM,WAG3BY,EAAEsC,EAAI,GAAKD,EAAY,IAAMC,EAAIA,EAU1CjB,EAAEb,IAAM,eACFR,EAAI,IAAI0C,KAAKhG,YAAYgG,aAC7B1C,EAAEsC,EAAI,EACCtC,GASTqB,EAAEsB,IAAM,SAAUC,OACZC,EACF7C,EAAI0C,KACJd,EAAK5B,EAAEK,EACPyC,GAAMF,EAAI,IAAI5C,EAAEtD,YAAYkG,IAAIvC,EAChCC,EAAIN,EAAEsC,EACNS,EAAIH,EAAEN,EACNU,EAAIhD,EAAEgC,EACNiB,EAAIL,EAAEZ,MAGHJ,EAAG,KAAOkB,EAAG,GAAI,OAAQlB,EAAG,GAAuBtB,EAAjBwC,EAAG,IAAUC,EAAL,KAG3CzC,GAAKyC,EAAG,OAAOzC,KAEnBuC,EAAQvC,EAAI,EAGR0C,GAAKC,EAAG,OAAOD,EAAIC,EAAIJ,EAAQ,GAAK,MAExCE,GAAKC,EAAIpB,EAAGnB,SAAWwC,EAAIH,EAAGrC,QAAUuC,EAAIC,EAGvC3C,GAAK,IAAKA,EAAIyC,MACbnB,EAAGtB,IAAMwC,EAAGxC,GAAI,OAAOsB,EAAGtB,GAAKwC,EAAGxC,GAAKuC,EAAQ,GAAK,SAInDG,GAAKC,EAAI,EAAID,EAAIC,EAAIJ,EAAQ,GAAK,GAQ3CxB,EAAE6B,IAAM,SAAUN,OACZ5C,EAAI0C,KACNb,EAAM7B,EAAEtD,YACR0D,EAAIJ,EAAEK,EACN8C,GAAKP,EAAI,IAAIf,EAAIe,IAAIvC,EACrB2C,EAAIhD,EAAEsC,GAAKM,EAAEN,EAAI,GAAK,EACtBc,EAAKvB,EAAIwB,MAEPD,MAASA,GAAMA,EAAK,GAAKA,EAAKrC,QAC1BgB,MAAMZ,OAITgC,EAAE,SACCpB,MAAMX,OAIThB,EAAE,UACLwC,EAAEN,EAAIU,EACNJ,EAAEvC,EAAI,CAACuC,EAAEZ,EAAI,GACNY,MAGLU,EAAIC,EAAIf,EAAGG,EAAKa,EAClBC,EAAKN,EAAE/D,QACPsE,EAAKJ,EAAKH,EAAE1C,OACZkD,EAAKvD,EAAEK,OACPmD,EAAIxD,EAAEhB,MAAM,EAAGkE,GACfO,EAAKD,EAAEnD,OACPqD,EAAIlB,EACJmB,EAAKD,EAAEzD,EAAI,GACX2D,EAAK,EACLC,EAAIb,GAAMU,EAAE9B,EAAIhC,EAAEgC,EAAIY,EAAEZ,GAAK,MAE/B8B,EAAExB,EAAIU,EACNA,EAAIiB,EAAI,EAAI,EAAIA,EAGhBR,EAAGxB,QAAQ,GAGJ4B,IAAOP,GAAKM,EAAEM,KAAK,KAEvB,KAGI1B,EAAI,EAAGA,EAAI,GAAIA,IAAK,IAGnBc,IAAOO,EAAKD,EAAEnD,QAChBkC,EAAMW,EAAKO,EAAK,GAAK,WAEhBL,GAAM,EAAGb,EAAM,IAAKa,EAAKF,MACxBH,EAAEK,IAAOI,EAAEJ,GAAK,CAClBb,EAAMQ,EAAEK,GAAMI,EAAEJ,GAAM,GAAK,aAO7Bb,EAAM,aAIHY,EAAKM,GAAMP,EAAKH,EAAIM,EAAII,GAAK,IAC5BD,IAAIC,GAAMN,EAAGM,GAAK,KACpBL,EAAKK,EACEL,IAAOI,IAAIJ,IAAMI,EAAEJ,GAAM,IAC9BI,EAAEJ,GACJI,EAAEC,IAAO,GAEXD,EAAEC,IAAON,EAAGM,SAGND,EAAE,IAAKA,EAAEO,QAOrBJ,EAAGC,KAAQrB,EAAMH,IAAMA,EAGnBoB,EAAE,IAAMjB,EAAKiB,EAAEC,GAAMzD,EAAEsD,IAAO,EAC7BE,EAAI,CAACxD,EAAEsD,WAEJA,IAAOC,GAAMC,EAAE,KAAOtC,IAAc0B,YAGzCe,EAAG,IAAY,GAANC,IAGZD,EAAGI,QACHL,EAAE9B,IACFiC,KAIED,EAAKC,GAAGzC,EAAMsC,EAAGG,EAAGpC,EAAIC,GAAI8B,EAAE,KAAOtC,GAElCwC,GAOTzC,EAAE+C,GAAK,SAAUxB,UACQ,IAAhBF,KAAKC,IAAIC,IAQlBvB,EAAEgD,GAAK,SAAUzB,UACRF,KAAKC,IAAIC,GAAK,GAQvBvB,EAAEiD,IAAM,SAAU1B,UACTF,KAAKC,IAAIC,IAAM,GAOxBvB,EAAEkD,GAAK,SAAU3B,UACRF,KAAKC,IAAIC,GAAK,GAQvBvB,EAAEmD,IAAM,SAAU5B,UACTF,KAAKC,IAAIC,GAAK,GAOvBvB,EAAEoD,MAAQpD,EAAEqD,IAAM,SAAU9B,OACtBtC,EAAGyC,EAAG4B,EAAGC,EACX5E,EAAI0C,KACJb,EAAM7B,EAAEtD,YACR0D,EAAIJ,EAAEsC,EACNa,GAAKP,EAAI,IAAIf,EAAIe,IAAIN,KAGnBlC,GAAK+C,SACPP,EAAEN,GAAKa,EACAnD,EAAE6E,KAAKjC,OAGZhB,EAAK5B,EAAEK,EAAEjB,QACX0F,EAAK9E,EAAEgC,EACPc,EAAKF,EAAEvC,EACP0E,EAAKnC,EAAEZ,MAGJJ,EAAG,KAAOkB,EAAG,UACZA,EAAG,GACLF,EAAEN,GAAKa,EACEvB,EAAG,GACZgB,EAAI,IAAIf,EAAI7B,GAEZ4C,EAAEN,EAAI,EAEDM,KAILxC,EAAI0E,EAAKC,EAAI,MAEXH,EAAOxE,EAAI,IACbA,GAAKA,EACLuE,EAAI/C,IAEJmD,EAAKD,EACLH,EAAI7B,GAGN6B,EAAEK,UACG7B,EAAI/C,EAAG+C,KAAMwB,EAAET,KAAK,GACzBS,EAAEK,mBAIFjC,IAAM6B,EAAOhD,EAAGnB,OAASqC,EAAGrC,QAAUmB,EAAKkB,GAAIrC,OAE1CL,EAAI+C,EAAI,EAAGA,EAAIJ,EAAGI,OACjBvB,EAAGuB,IAAML,EAAGK,GAAI,CAClByB,EAAOhD,EAAGuB,GAAKL,EAAGK,YAOpByB,IACFD,EAAI/C,EACJA,EAAKkB,EACLA,EAAK6B,EACL/B,EAAEN,GAAKM,EAAEN,IAONa,GAAKJ,EAAID,EAAGrC,SAAWH,EAAIsB,EAAGnB,SAAW,EAAG,KAAO0C,KAAMvB,EAAGtB,KAAO,MAGnE6C,EAAI7C,EAAGyC,EAAI3C,GAAI,IACdwB,IAAKmB,GAAKD,EAAGC,GAAI,KACdzC,EAAIyC,EAAGzC,IAAMsB,IAAKtB,IAAKsB,EAAGtB,GAAK,IAClCsB,EAAGtB,GACLsB,EAAGmB,IAAM,GAGXnB,EAAGmB,IAAMD,EAAGC,QAIK,IAAZnB,IAAKuB,IAAWvB,EAAGM,WAGT,IAAVN,EAAG,IACRA,EAAGuC,UACDY,SAGCnD,EAAG,KAGNgB,EAAEN,EAAI,EAGNV,EAAK,CAACmD,EAAK,IAGbnC,EAAEvC,EAAIuB,EACNgB,EAAEZ,EAAI+C,EAECnC,GAOTvB,EAAE4D,IAAM,SAAUrC,OACZsC,EACFlF,EAAI0C,KACJb,EAAM7B,EAAEtD,YACR0D,EAAIJ,EAAEsC,EACNa,GAAKP,EAAI,IAAIf,EAAIe,IAAIN,MAElBM,EAAEvC,EAAE,SACD0B,MAAMX,UAGdpB,EAAEsC,EAAIM,EAAEN,EAAI,EACZ4C,EAAmB,GAAZtC,EAAED,IAAI3C,GACbA,EAAEsC,EAAIlC,EACNwC,EAAEN,EAAIa,EAEF+B,EAAa,IAAIrD,EAAI7B,IAEzBI,EAAIyB,EAAIwB,GACRF,EAAItB,EAAIC,GACRD,EAAIwB,GAAKxB,EAAIC,GAAK,EAClB9B,EAAIA,EAAEkD,IAAIN,GACVf,EAAIwB,GAAKjD,EACTyB,EAAIC,GAAKqB,EAEFT,KAAK+B,MAAMzE,EAAEmF,MAAMvC,MAO5BvB,EAAEwD,KAAOxD,EAAE+D,IAAM,SAAUxC,OACrBZ,EAAGgB,EAAG2B,EACR3E,EAAI0C,KACJb,EAAM7B,EAAEtD,eAEVkG,EAAI,IAAIf,EAAIe,GAGR5C,EAAEsC,GAAKM,EAAEN,SACXM,EAAEN,GAAKM,EAAEN,EACFtC,EAAEyE,MAAM7B,OAGbkC,EAAK9E,EAAEgC,EACTJ,EAAK5B,EAAEK,EACP0E,EAAKnC,EAAEZ,EACPc,EAAKF,EAAEvC,MAGJuB,EAAG,KAAOkB,EAAG,UACXA,EAAG,KACFlB,EAAG,GACLgB,EAAI,IAAIf,EAAI7B,GAEZ4C,EAAEN,EAAItC,EAAEsC,GAGLM,KAGThB,EAAKA,EAAGxC,QAIJ4C,EAAI8C,EAAKC,EAAI,KACX/C,EAAI,GACN+C,EAAKD,EACLH,EAAI7B,IAEJd,GAAKA,EACL2C,EAAI/C,GAGN+C,EAAEK,UACKhD,KAAM2C,EAAET,KAAK,GACpBS,EAAEK,cAIApD,EAAGnB,OAASqC,EAAGrC,OAAS,IAC1BkE,EAAI7B,EACJA,EAAKlB,EACLA,EAAK+C,GAGP3C,EAAIc,EAAGrC,OAGFuC,EAAI,EAAGhB,EAAGJ,EAAGI,IAAM,GAAIgB,GAAKpB,IAAKI,GAAKJ,EAAGI,GAAKc,EAAGd,GAAKgB,GAAK,GAAK,MAIjEA,IACFpB,EAAGK,QAAQe,KACT+B,GAIC/C,EAAIJ,EAAGnB,OAAoB,IAAZmB,IAAKI,IAAWJ,EAAGM,aAEvCU,EAAEvC,EAAIuB,EACNgB,EAAEZ,EAAI+C,EAECnC,GAWTvB,EAAEgE,IAAM,SAAU7C,OACZxC,EAAI0C,KACN4C,EAAM,IAAItF,EAAEtD,YAAY,KACxBkG,EAAI0C,EACJzC,EAAQL,EAAI,KAEVA,MAAQA,GAAKA,GAAI,KAAcA,EAAIxB,QAC/Be,MAAMb,EAAU,gBAGpB2B,IAAOL,GAAKA,GAGN,EAAJA,IAAOI,EAAIA,EAAEuC,MAAMnF,IACvBwC,IAAM,GAENxC,EAAIA,EAAEmF,MAAMnF,UAGP6C,EAAQyC,EAAIpC,IAAIN,GAAKA,GAW9BvB,EAAEkE,KAAO,SAAU9D,EAAIC,MACjBD,MAASA,GAAMA,EAAK,GAAKA,EAAKV,QAC1BgB,MAAMb,EAAU,oBAEjBM,EAAM,IAAIkB,KAAKhG,YAAYgG,MAAOjB,EAAIC,IAa/CL,EAAEG,MAAQ,SAAU4B,EAAI1B,MAClB0B,IAAO9B,EAAW8B,EAAK,OACtB,GAAIA,MAASA,GAAMA,GAAMrC,GAAUqC,EAAKrC,QACrCgB,MAAMZ,UAEPK,EAAM,IAAIkB,KAAKhG,YAAYgG,MAAOU,EAAKV,KAAKV,EAAI,EAAGN,IAQ5DL,EAAEmE,KAAO,eACH5B,EAAGvD,EAAGsE,EACR3E,EAAI0C,KACJb,EAAM7B,EAAEtD,YACR4F,EAAItC,EAAEsC,EACNN,EAAIhC,EAAEgC,EACNyD,EAAO,IAAI5D,EAAI,WAGZ7B,EAAEK,EAAE,GAAI,OAAO,IAAIwB,EAAI7B,MAGxBsC,EAAI,QACAP,MAAMd,EAAO,kBAQX,KAJVqB,EAAI/B,KAAKiF,KAAKxF,EAAI,MAIHsC,IAAM,EAAA,IACnBjC,EAAIL,EAAEK,EAAEkC,KAAK,KACL9B,OAASuB,EAAI,IAAI3B,GAAK,KAE9B2B,IAAMA,EAAI,GAAK,EAAI,IAAMA,EAAI,GAAS,EAAJA,GAClC4B,EAAI,IAAI/B,IAFRS,EAAI/B,KAAKiF,KAAKnF,KAEI,EAAA,EAAQ,MAAQiC,EAAIA,EAAEoD,iBAAiBtG,MAAM,EAAGkD,EAAEqD,QAAQ,KAAO,IAAM3D,IAEzF4B,EAAI,IAAI/B,EAAIS,EAAI,IAGlBN,EAAI4B,EAAE5B,GAAKH,EAAIwB,IAAM,MAInBsB,EAAIf,EACJA,EAAI6B,EAAKN,MAAMR,EAAEE,KAAK7E,EAAEkD,IAAIyB,WACrBA,EAAEtE,EAAEjB,MAAM,EAAG4C,GAAGO,KAAK,MAAQqB,EAAEvD,EAAEjB,MAAM,EAAG4C,GAAGO,KAAK,YAEpDf,EAAMoC,GAAI/B,EAAIwB,IAAM,GAAKO,EAAE5B,EAAI,EAAGH,EAAIC,KAO/CT,EAAE8D,MAAQ9D,EAAEuE,IAAM,SAAUhD,OACtBvC,EACFL,EAAI0C,KACJb,EAAM7B,EAAEtD,YACRkF,EAAK5B,EAAEK,EACPyC,GAAMF,EAAI,IAAIf,EAAIe,IAAIvC,EACtBD,EAAIwB,EAAGnB,OACP0C,EAAIL,EAAGrC,OACPH,EAAIN,EAAEgC,EACNe,EAAIH,EAAEZ,KAGRY,EAAEN,EAAItC,EAAEsC,GAAKM,EAAEN,EAAI,GAAK,GAGnBV,EAAG,KAAOkB,EAAG,UAChBF,EAAEvC,EAAI,CAACuC,EAAEZ,EAAI,GACNY,MAITA,EAAEZ,EAAI1B,EAAIyC,EAGN3C,EAAI+C,IACN9C,EAAIuB,EACJA,EAAKkB,EACLA,EAAKzC,EACL0C,EAAI3C,EACJA,EAAI+C,EACJA,EAAIJ,GAID1C,EAAI,IAAI9D,MAAMwG,EAAI3C,EAAI+C,GAAIJ,KAAM1C,EAAE0C,GAAK,MAKvCzC,EAAI6C,EAAG7C,KAAM,KAChB6C,EAAI,EAGCJ,EAAI3C,EAAIE,EAAGyC,EAAIzC,GAGlB6C,EAAI9C,EAAE0C,GAAKD,EAAGxC,GAAKsB,EAAGmB,EAAIzC,EAAI,GAAK6C,EACnC9C,EAAE0C,KAAOI,EAAI,GAGbA,EAAIA,EAAI,GAAK,EAGf9C,EAAE0C,GAAKI,MAILA,IAAKP,EAAEZ,EACN3B,EAAE8D,QAGF7D,EAAID,EAAEI,QAASJ,IAAIC,IAAKD,EAAE6B,aAC/BU,EAAEvC,EAAIA,EAECuC,GAWTvB,EAAEqE,cAAgB,SAAUtC,EAAI1B,OAC1B1B,EAAI0C,KACNF,EAAIxC,EAAEK,EAAE,MAEN+C,IAAO9B,EAAW,IAChB8B,MAASA,GAAMA,EAAK,GAAKA,EAAKrC,QAC1BgB,MAAMZ,OAEdnB,EAAIwB,EAAM,IAAIxB,EAAEtD,YAAYsD,KAAMoD,EAAI1B,GAC/B1B,EAAEK,EAAEI,OAAS2C,GAAKpD,EAAEK,EAAE6D,KAAK,UAG7B/B,EAAUnC,GAAG,IAAQwC,IAc9BnB,EAAEwE,QAAU,SAAUzC,EAAI1B,OACpB1B,EAAI0C,KACNF,EAAIxC,EAAEK,EAAE,MAEN+C,IAAO9B,EAAW,IAChB8B,MAASA,GAAMA,EAAK,GAAKA,EAAKrC,QAC1BgB,MAAMZ,OAKTiC,EAAKA,GAHVpD,EAAIwB,EAAM,IAAIxB,EAAEtD,YAAYsD,GAAIoD,EAAKpD,EAAEgC,EAAI,EAAGN,IAG7BM,EAAI,EAAGhC,EAAEK,EAAEI,OAAS2C,GAAKpD,EAAEK,EAAE6D,KAAK,UAG9C/B,EAAUnC,GAAG,IAASwC,IAU/BnB,EAAEyE,OAASzE,EAAEvE,SAAW,eAClBkD,EAAI0C,KACNb,EAAM7B,EAAEtD,mBACHyF,EAAUnC,EAAGA,EAAEgC,GAAKH,EAAIkE,IAAM/F,EAAEgC,GAAKH,EAAImE,KAAMhG,EAAEK,EAAE,KAO5DgB,EAAE4E,SAAW,eACPzD,EAAI0D,OAAO/D,EAAUO,MAAM,GAAM,QACL,IAA5BA,KAAKhG,YAAYyJ,SAAoBzD,KAAK0B,GAAG5B,EAAE1F,kBAC3CiF,MAAMd,EAAO,+BAEduB,GAaTnB,EAAE+E,YAAc,SAAU3E,EAAIC,OACxB1B,EAAI0C,KACNb,EAAM7B,EAAEtD,YACR8F,EAAIxC,EAAEK,EAAE,MAENoB,IAAOH,EAAW,IAChBG,MAASA,GAAMA,EAAK,GAAKA,EAAKV,QAC1BgB,MAAMb,EAAU,iBAExBlB,EAAIwB,EAAM,IAAIK,EAAI7B,GAAIyB,EAAIC,GACnB1B,EAAEK,EAAEI,OAASgB,GAAKzB,EAAEK,EAAE6D,KAAK,UAG7B/B,EAAUnC,EAAGyB,GAAMzB,EAAEgC,GAAKhC,EAAEgC,GAAKH,EAAIkE,IAAM/F,EAAEgC,GAAKH,EAAImE,KAAMxD,IAUrEnB,EAAEgF,QAAU,eACNrG,EAAI0C,KACNb,EAAM7B,EAAEtD,gBACS,IAAfmF,EAAIsE,aACApE,MAAMd,EAAO,6BAEdkB,EAAUnC,EAAGA,EAAEgC,GAAKH,EAAIkE,IAAM/F,EAAEgC,GAAKH,EAAImE,IAAI,IAO/C,IAAInE,EAp6BX,SAASyE,aAQEzE,EAAIW,OACPxC,EAAI0C,UAGF1C,aAAa6B,GAAM,OAAOW,IAAMlB,EAAYgF,IAAU,IAAIzE,EAAIW,MAGhEA,aAAaX,EACf7B,EAAEsC,EAAIE,EAAEF,EACRtC,EAAEgC,EAAIQ,EAAER,EACRhC,EAAEK,EAAImC,EAAEnC,EAAEjB,YACL,IACY,iBAANoD,EAAgB,KACN,IAAfX,EAAIsE,aACAI,UAAUrF,EAAU,UAI5BsB,EAAU,IAANA,GAAW,EAAIA,EAAI,EAAI,KAAOgE,OAAOhE,IA4BjD,SAAexC,EAAGwC,OACZR,EAAG1B,EAAGmG,MAELlF,EAAQmF,KAAKlE,SACVT,MAAMb,EAAU,UAIxBlB,EAAEsC,EAAmB,KAAfE,EAAEC,OAAO,IAAaD,EAAIA,EAAEpD,MAAM,IAAK,GAAK,GAG7C4C,EAAIQ,EAAEmD,QAAQ,OAAS,IAAGnD,EAAIA,EAAEmE,QAAQ,IAAK,MAG7CrG,EAAIkC,EAAEoE,OAAO,OAAS,GAGrB5E,EAAI,IAAGA,EAAI1B,GACf0B,IAAMQ,EAAEpD,MAAMkB,EAAI,GAClBkC,EAAIA,EAAEqE,UAAU,EAAGvG,IACV0B,EAAI,IAGbA,EAAIQ,EAAE/B,YAGRgG,EAAKjE,EAAE/B,OAGFH,EAAI,EAAGA,EAAImG,GAAqB,KAAfjE,EAAEC,OAAOnC,MAAcA,KAEzCA,GAAKmG,EAGPzG,EAAEK,EAAI,CAACL,EAAEgC,EAAI,OACR,MAGEyE,EAAK,GAAuB,KAAlBjE,EAAEC,SAASgE,SAC5BzG,EAAEgC,EAAIA,EAAI1B,EAAI,EACdN,EAAEK,EAAI,GAGD2B,EAAI,EAAG1B,GAAKmG,GAAKzG,EAAEK,EAAE2B,MAAQQ,EAAEC,OAAOnC,MApEzCwG,CAAM9G,EAAGwC,GAKXxC,EAAEtD,YAAcmF,SAGlBA,EAAIhF,UAAYwE,EAChBQ,EAAIwB,GAjGG,GAkGPxB,EAAIC,GAxFC,EAyFLD,EAAIkE,IA5EC,EA6ELlE,EAAImE,GAtEC,GAuELnE,EAAIsE,OAhEK,MAkEFtE,EAw3BQyE,SC3+BIS,UACbA,IAAY,QACZA,UAAU,CAChBC,KAAM,QACNC,MAAO,EACPC,MAAO,EACPC,IAAK,GAGCJ,MAAMK,EAENL,KAAKM,EACLN,IAAIO,EACJP,MAAMtK"}